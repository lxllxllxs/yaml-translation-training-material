id: 338670
key: 79936377-aa69-45ae-a386-d865dcb36518
locale: zh-cn
version: 1.0.0
title: Fragment
semantic_type: Lesson
updated_at: 'Fri Jun 23 2017 02:09:05 GMT+0000 (UTC)'
is_public: true
image:
  url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/59025203_nd801-ud855-fragments/nd801-ud855-fragments.png'
  width: 592
  height: 584
video: null
summary: ‘在这节课，你将详细了解 **Fragment**。Fragment 是构建灵活的应用界面的基本元素。你将构建一款叫做 AndroidMe 的应用，并掌握如何创建 Fragment 的实践经验。AndroidMe 使用户能够自定义 Android 图像的头发和服饰。完成该应用后，你将了解如何使用 Fragment 和强大的模块及重复利用功能，构建美观的自适应用户界面！’
lesson_type: Classroom
duration: 240
is_project_lesson: false
_concepts_ids:
  - 338645
  - 338631
  - 338644
  - 338646
  - 338643
  - 338649
  - 338650
  - 338651
  - 338652
  - 338653
  - 338654
  - 338655
  - 338656
  - 338657
  - 338658
  - 338659
  - 338660
  - 338661
  - 338662
  - 338663
  - 338664
  - 338665
  - 338666
  - 338667
  - 338668
_project_id: null
concepts:
  - id: 338645
    key: cfef9808-ca3a-44d2-995a-e2553f5abc94
    locale: zh-cn
    version: 1.0.0
    title: Fragment 简介
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338598
    atoms:
      - id: 338598
        key: eaed1134-0f83-4caf-b6e7-dea36a20bbe9
        locale: zh-cn
        version: 1.0.0
        title: Fragment 简介
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51421'
          youtube_id: KECSjLiTu78
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c28d_02-fragments-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c28d_02-fragments-intro/02-fragments-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c28d_02-fragments-intro/02-fragments-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c28d_02-fragments-intro/02-fragments-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c28d_02-fragments-intro/02-fragments-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c28d_02-fragments-intro/hls/playlist.m3u8'
  - id: 338631
    key: a2047c96-af15-4e98-ab8f-82c7705464e5
    locale: zh-cn
    version: 1.0.0
    title: 自适应设计
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338593
      - 338594
    atoms:
      - id: 338593
        key: a32ab24a-896f-4613-9e91-2e10831009e9
        locale: zh-cn
        version: 1.0.0
        title: 自适应设计
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:03 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51846'
          youtube_id: 5kmlkW4aO4c
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04b79_03-responsive-design/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04b79_03-responsive-design/03-responsive-design_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04b79_03-responsive-design/03-responsive-design_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04b79_03-responsive-design/03-responsive-design_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04b79_03-responsive-design/03-responsive-design_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04b79_03-responsive-design/hls/playlist.m3u8'
      - id: 338594
        key: a538456a-7fee-45e6-a6d4-973789c47b4d
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:03 GMT+0000 (UTC)'
        is_public: true
        text: ‘详细了解如何[实现子代导航](https://developer.android.com/training/implementing-navigation/descendant.html)。’
        instructor_notes: ''
        resources: null
  - id: 338644
    key: 3e401af5-517f-499f-9d69-87107a2bad20
    locale: zh-cn
    version: 1.0.0
    title: 为何要使用 Fragment？
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338595
      - 338596
    atoms:
      - id: 338595
        key: 77ba5bee-191b-4324-9340-407375343a3d
        locale: zh-cn
        version: 1.0.0
        title: 为何要使用 Fragment？
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51829'
          youtube_id: vvKB3_BQn2g
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03703_nd801-00057-04-why-use-fragments/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03703_nd801-00057-04-why-use-fragments/nd801-00057-04-why-use-fragments_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03703_nd801-00057-04-why-use-fragments/nd801-00057-04-why-use-fragments_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03703_nd801-00057-04-why-use-fragments/nd801-00057-04-why-use-fragments_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03703_nd801-00057-04-why-use-fragments/nd801-00057-04-why-use-fragments_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03703_nd801-00057-04-why-use-fragments/hls/playlist.m3u8'
      - id: 338596
        key: 8b39d5b2-ab52-4454-8dec-242fb1f8d9aa
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: ‘请务必记住，[Fragment](https://developer.android.com/guide/components/fragments.html) 必须始终嵌入到 Activity 中，Fragment 的生命周期直接受到托管 Activity 生命周期的影响。例如，当 Activity 被暂停时，其中的所有 Fragment 也会暂停，然后该 Activity 被销毁，所有 Fragment 也会随之被销毁。’
        instructor_notes: ''
        resources: null
  - id: 338646
    key: 05bff044-e412-4297-8140-12171dd21cae
    locale: zh-cn
    version: 1.0.0
    title: Fragment 的优势
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338597
    atoms:
      - id: 338597
        key: af67a51a-6739-4b15-8dcb-977ce8641cea
        locale: zh-cn
        version: 1.0.0
        title: Fragment 的优势
        semantic_type: CheckboxQuizAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: 请查看让 Fragment 非常实用的所有特性。
          correct_feedback: ‘很棒！Fragment 可以重复利用、模块化（因为它们具有自己的生命周期），并且可以在运行时动态改变！’
          video_feedback: null
          default_feedback: ‘嗯，似乎一个或多个答案不正确，请记得选中所有适用项！’
          answers:
            - id: a1489182751845
              text: 可以重复利用
              is_correct: true
              incorrect_feedback: null
            - id: a1489182798715
              text: Fragment 具有和其托管 Activity 相同的生命周期
              is_correct: false
              incorrect_feedback: null
            - id: a1489182806684
              text: 可以用来构建灵活的 UI
              is_correct: true
              incorrect_feedback: null
            - id: a1489182815073
              text: 可以在运行时动态地添加或删除 Fragment
              is_correct: true
              incorrect_feedback: null
  - id: 338643
    key: 1f7a9b74-eb88-4385-9adc-aecb26bcbbaf
    locale: zh-cn
    version: 1.0.0
    title: Fragment 生命周期
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338599
    atoms:
      - id: 338599
        key: 15af75bf-1407-4d82-81ec-286acfd038f3
        locale: zh-cn
        version: 1.0.0
        title: Fragment 生命周期
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51423'
          youtube_id: uvloJibNKsQ
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c48e_06-fragment-lifecycle/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c48e_06-fragment-lifecycle/06-fragment-lifecycle_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c48e_06-fragment-lifecycle/06-fragment-lifecycle_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c48e_06-fragment-lifecycle/06-fragment-lifecycle_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c48e_06-fragment-lifecycle/06-fragment-lifecycle_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c48e_06-fragment-lifecycle/hls/playlist.m3u8'
  - id: 338649
    key: 68125fbd-ec4e-4650-9934-03935c5c415e
    locale: zh-cn
    version: 1.0.0
    title: 生命周期回调
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338600
    atoms:
      - id: 338600
        key: cb18059d-bb5e-44e2-b39a-d7e6e749a0aa
        locale: zh-cn
        version: 1.0.0
        title: Fragment 生命周期回调
        semantic_type: RadioQuizAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: ‘对于 Activity 中的单个 Fragment，当其托管 Activity 被创建后，系统会立即调用什么生命周期回调？'
          correct_feedback: ‘正确！当托管 Activity 被创建后，Activity 及其包含的 Fragment 会调用它们的 onCreate 方法。创建完毕后，Fragment 会调用它们的 onCreateView 方法，以便动态地填充视图！’
          video_feedback: null
          default_feedback: ‘不太对！当 Activity 被创建时，它会调用 onCreate，Fragment 具有自己的方法，并紧接着立即被调用，以便填充 Fragment 的视图。’
          answers:
            - id: a1489183245131
              text: onDestroy
              is_correct: false
              incorrect_feedback: null
            - id: a1489183278465
              text: onCreateView
              is_correct: true
              incorrect_feedback: null
            - id: a1489183287077
              text: onResume
              is_correct: false
              incorrect_feedback: null
            - id: a1489183300108
              text: onSaveInstanceState
              is_correct: false
              incorrect_feedback: null
            - id: a1489183308632
              text: onCreate
              is_correct: false
              incorrect_feedback: null
  - id: 338650
    key: c2bcb059-e1bd-425a-898a-019b9f38a144
    locale: zh-cn
    version: 1.0.0
    title: 起始代码
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338601
      - 338602
    atoms:
      - id: 338601
        key: 6dc1c840-44f6-4883-a50c-453674dbcafd
        locale: zh-cn
        version: 1.0.0
        title: 起始代码
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51424'
          youtube_id: CFYfd7C93G4
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c566_nd801-00061-08-starting-code-sc/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c566_nd801-00061-08-starting-code-sc/nd801-00061-08-starting-code-sc_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c566_nd801-00061-08-starting-code-sc/nd801-00061-08-starting-code-sc_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c566_nd801-00061-08-starting-code-sc/nd801-00061-08-starting-code-sc_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c566_nd801-00061-08-starting-code-sc/nd801-00061-08-starting-code-sc_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58c9c566_nd801-00061-08-starting-code-sc/hls/playlist.m3u8'
      - id: 338602
        key: e419d118-ad35-4c8a-bee0-8530bcdf733a
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # 下载 AndroidMe 起始代码

          该应用的代码位于 [AndroidMe 资源库](https://github.com/udacity/Android_Me) 中。请使用以下命令下载该资源库：

          ```bash
          git clone https://github.com/udacity/Android_Me.git
          ```

          如果你想复习下代码的组织结构，请参阅[我们在如何使用课程代码部分介绍的内容](https://classroom.udacity.com/courses/ud857/lessons/8b2a9d63-0ff5-48ff-90d3-a9855b701dae/concepts/41b82e3c-2797-46e5-8a66-684098ca8cbb)。

          ### 练习代码
          **练习：**[TFragments.00-StartingCode](https://github.com/udacity/Android_Me/tree/TFragments.00-StartingCode)
        instructor_notes: ''
        resources: null
  - id: 338651
    key: e07ab40c-9248-43f8-b78a-c4835aa8aa37
    locale: zh-cn
    version: 1.0.0
    title: 创建 Fragment
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338603
      - 338604
    atoms:
      - id: 338603
        key: c6c6b587-9b60-4406-9326-9d64ba05723c
        locale: zh-cn
        version: 1.0.0
        title: ‘创建 Fragment '
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51501'
          youtube_id: g2xvPm8y5PQ
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadece_nd801-00062-09-create-a-fragment-sc-/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadece_nd801-00062-09-create-a-fragment-sc-/nd801-00062-09-create-a-fragment-sc-_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadece_nd801-00062-09-create-a-fragment-sc-/nd801-00062-09-create-a-fragment-sc-_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadece_nd801-00062-09-create-a-fragment-sc-/nd801-00062-09-create-a-fragment-sc-_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadece_nd801-00062-09-create-a-fragment-sc-/nd801-00062-09-create-a-fragment-sc-_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadece_nd801-00062-09-create-a-fragment-sc-/hls/playlist.m3u8'
      - id: 338604
        key: 0f359a8b-1671-4fb6-8a4f-96c00a5fdba4
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          ### Fragment 命名规范

          类名称必须采用骆驼拼写法。例如：`SignInFragment`

          相应的 XML 文件应该遵守以下命名规范：`fragment_<FRAGMENT_NAME>.xml`

          例如：`fragment_sign_in.xml`

          要了解完整的 Android 命名规范列表，请参阅 [ribot 的 Android 指南](https://github.com/ribot/android-guidelines/blob/master/project_and_code_guidelines.md)。

          ### 选择 Fragment 支持库

          我们的 Fragment 类使用 *v4 [支持库](https://developer.android.com/topic/libraries/support-library/packages.html)*。v4 库旨在与 Android 2.3（API 级别 9）及以上版本结合使用。与其他库相比，它们包含最庞大的 API 集合，包括对应用组件、用户界面功能、无障碍、数据处理、网络连接和编程实用工具的支持。
        instructor_notes: ''
        resources: null
  - id: 338652
    key: 88fefef7-4404-440b-8ff5-14a2713b975e
    locale: zh-cn
    version: 1.0.0
    title: 创建 Fragment 的步骤
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338605
    atoms:
      - id: 338605
        key: 9b0eb44a-bbe5-404f-a602-356e9b7a441d
        locale: zh-cn
        version: 1.0.0
        title: 创建 Fragment 的有序步骤
        semantic_type: MatchingQuizAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        question:
          complex_prompt:
            text: |
              对你需要完成的任务进行排序，以便按照正确的执行顺序动态地显示 Fragment。 

              例如，要创建新的 Activity：1) 创建一个指向新 Activity 的新 Intent，2) 向该 Intent 添加所需的信息，3) 启动该 Intent（按此顺序）。
          default_feedback: |-
            似乎一个或多个步骤顺序不对。 
            *提示：* 要填充布局，你首先需要创建布局，最后一步应该是在托管 Activity 中显示 Fragment。
          correct_feedback: ‘很棒！首先需要为 Fragment 的外观定义布局，然后创建新的 Fragment 类（用于填充之前定义的布局），最后，在托管 Activity 中创建和显示该 Fragment。'
          video_feedback: null
          concepts_label: Task description
          answers_label: Step number
          concepts:
            - text: 创建填充布局的新 Fragment 类
              default_concept_feedback: null
              correct_answer:
                id: a1489183712109
                text: '2'
              incorrect_feedbacks: []
            - text: 创建定义 Fragment 外观的布局
              default_concept_feedback: null
              correct_answer:
                id: a1489183959601
                text: '1'
              incorrect_feedbacks: []
            - text: 使用 FragmentManager 和 Fragment 事务将 Fragment 添加到托管 Activity 中
              default_concept_feedback: null
              correct_answer:
                id: a1489184014139
                text: '4'
              incorrect_feedbacks: []
            - text: 在托管 Activity 中创建新的 Fragment 实例
              default_concept_feedback: null
              correct_answer:
                id: a1489184039697
                text: '3'
              incorrect_feedbacks: []
          answers:
            - id: a1489183712109
              text: '2'
            - id: a1489183959601
              text: '1'
            - id: a1489184014139
              text: '4'
            - id: a1489184039697
              text: '3'
  - id: 338653
    key: af805185-cfc8-49da-bf97-c8d60c194fe5
    locale: zh-cn
    version: 1.0.0
    title: ‘练习：创建 BodyPartFragment'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338606
      - 338607
    atoms:
      - id: 338606
        key: 8daf12ae-b1e0-4789-8f65-9813fb0d10e2
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # 创建和显示 BodyPartFragment

          在此练习中，你将完成三项任务。首先，创建一个显示图片的新 Fragment 布局，然后创建一个新的 Fragment 类来展示该布局，最后，在 Activity 中实例化和显示 Fragment！

          请下载练习代码并按照所列的 TODO 操作，完成该练习！

          ### 练习代码
          **练习：**[TFragments.01-Exercise-CreateBodyPartFragment](https://github.com/udacity/Android_Me/tree/TFragments.01-Exercise-CreateBodyPartFragment/app)
        instructor_notes: ''
        resources: null
      - id: 338607
        key: baf17289-5116-4ce0-b10a-b2ad371a56dd
        locale: zh-cn
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - 创建一个布局文件，用于显示一个身体部分图片，名称为 fragment_body_part.xml
          - 创建一个叫做 BodyPartFragment 的新类，用于显示 Android-Me 身体部分的图片
          - ‘在新建的类中，显示头部图片列表中的第一张图片'
          - ‘在 activity_android_me 布局文件中，创建一个容器来放置头部 BodyPartFragment'
          - 创建一个新的 BodyPartFragment 实例，并使用 FragmentManager 显示该实例
        positive_feedback: |-
          很棒！你已经有了很好的开端，继续保持！

          **解决方案：**[[TFragments.01-Solution-CreateBodyPartFragment](https://github.com/udacity/Android_Me/tree/TFragments.01-Solution-CreateBodyPartFragment/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.01-Exercise-CreateBodyPartFragment...TFragments.01-Solution-CreateBodyPartFragment)]
        video_feedback: null
        description: 按照相关步骤操作，完成此编程练习。
  - id: 338654
    key: 5af22bff-9bb3-457a-8d00-2e5a769ac575
    locale: zh-cn
    version: 1.0.0
    title: FragmentManager 和事务
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338608
    atoms:
      - id: 338608
        key: 40f496b4-70a1-4e1b-9bad-c8ce368d5343
        locale: zh-cn
        version: 1.0.0
        title: FragmentManager 和事务
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51828'
          youtube_id: T6_mGn4oK0M
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03552_12-fragment-manager-and-transactions/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03552_12-fragment-manager-and-transactions/12-fragment-manager-and-transactions_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03552_12-fragment-manager-and-transactions/12-fragment-manager-and-transactions_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03552_12-fragment-manager-and-transactions/12-fragment-manager-and-transactions_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03552_12-fragment-manager-and-transactions/12-fragment-manager-and-transactions_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d03552_12-fragment-manager-and-transactions/hls/playlist.m3u8'
  - id: 338655
    key: 32e598d2-94a0-4e9f-8e86-666875720477
    locale: zh-cn
    version: 1.0.0
    title: 更多 Fragment 和存储变量
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338609
    atoms:
      - id: 338609
        key: 349582bf-859e-45fd-9451-5511004b6ac5
        locale: zh-cn
        version: 1.0.0
        title: 更多 Fragment 和存储变量
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51493'
          youtube_id: NpzC9UhCMik
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58caca5c_nd801-00066-13-more-fragments-and-storing-variables-sc/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58caca5c_nd801-00066-13-more-fragments-and-storing-variables-sc/nd801-00066-13-more-fragments-and-storing-variables-sc_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58caca5c_nd801-00066-13-more-fragments-and-storing-variables-sc/nd801-00066-13-more-fragments-and-storing-variables-sc_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58caca5c_nd801-00066-13-more-fragments-and-storing-variables-sc/nd801-00066-13-more-fragments-and-storing-variables-sc_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58caca5c_nd801-00066-13-more-fragments-and-storing-variables-sc/nd801-00066-13-more-fragments-and-storing-variables-sc_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58caca5c_nd801-00066-13-more-fragments-and-storing-variables-sc/hls/playlist.m3u8'
  - id: 338656
    key: aa8f96d4-191e-44d2-9fd7-15f42768c2f2
    locale: zh-cn
    version: 1.0.0
    title: ‘练习：显示三个 Fragment'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338610
      - 338611
    atoms:
      - id: 338610
        key: d6bc6d75-2b65-4387-8303-060f238615e1
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # 显示所有三个 BodyPartFragment

          在此练习中，你将根据所学的知识将剩下的 BodyPartFragment 添加到屏幕上！你还将学习如何动态地设置 Fragment 资源

          ### 练习代码
          **练习：**[TFragments.02-Exercise-DisplayThreeFragments](https://github.com/udacity/Android_Me/tree/TFragments.02-Exercise-DisplayThreeFragments/app)

          ## 设置图片资源

          该练习的难点之处是动态地设置 Fragment 资源。主要步骤包括：1) 添加内部类变量，用于跟踪 Fragment 类中的资源，以及 2) 提供“setter”方法，使你能够为这些类变量设定特定的值。
        instructor_notes: ''
        resources: null
      - id: 338611
        key: ca3fc68c-1476-4df9-bb7c-fe3e081f43b3
        locale: zh-cn
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - ‘对于 BodyPartFragment，创建一个 setter 方法和类变量 (mImageIds)，以便设置和存储图片资源列表'
          - 创建另一个 setter 方法和变量 (mListIndex)，以便跟踪和设置要显示的列表项的索引
          - ‘如果存在图片 ID 列表，则将图片资源设为该列表中的正确列表项'
          - 创建和显示身体和腿部 BodyPartFragment
        positive_feedback: |-
          很棒！

          **解决方案：**[[TFragments.02-Solution-DisplayThreeFragments](https://github.com/udacity/Android_Me/tree/TFragments.02-Solution-DisplayThreeFragments/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.02-Exercise-DisplayThreeFragments...TFragments.02-Solution-DisplayThreeFragments)]
        video_feedback: null
        description: ‘现在该你了。按照相关步骤操作，完成此编程练习。'
  - id: 338657
    key: 613159c2-d3e7-4f3a-bbba-8d93414637a9
    locale: zh-cn
    version: 1.0.0
    title: 练习替换 Fragment
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338612
    atoms:
      - id: 338612
        key: 4a2acf49-bd86-4352-8581-26f1c2c706b8
        locale: zh-cn
        version: 1.0.0
        title: 替换 Fragment
        semantic_type: RadioQuizAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: |-
            我们提供了以下起始代码：


            ```java

            FragmentManager fm = getSupportFragmentManager();
            Fragment frag = new BodyPartFragment();
            int containerID = R.id.fragment_container;
            FragmentTransaction ft = fm.beginTransaction();

            ```

            完成事务代码，将 Fragment 容器替换成新的 BodyPartFragment。
          correct_feedback: 很棒，你能够正确地进行替换！
          video_feedback: null
          default_feedback: ‘嗯，确保调用 commit 并替换现有的 Fragment！’
          answers:
            - id: a1489184461983
              text: 'ft.replace(containerID, frag);'
              is_correct: false
              incorrect_feedback: null
            - id: a1489184503002
              text: 'ft.add(containerID, frag). commit();'
              is_correct: false
              incorrect_feedback: null
            - id: a1489184521128
              text: 'ft.replace(containerID, null). commit();'
              is_correct: false
              incorrect_feedback: null
            - id: a1489184525797
              text: 'ft.replace(containerID, frag). commit();'
              is_correct: true
              incorrect_feedback: null
  - id: 338658
    key: b70f337f-216e-4c81-bec4-62f53756cfb0
    locale: zh-cn
    version: 1.0.0
    title: 对点击做出响应
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338613
    atoms:
      - id: 338613
        key: b2ce2c25-e29c-470a-bb21-6711e707994b
        locale: zh-cn
        version: 1.0.0
        title: 对点击做出响应
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51502'
          youtube_id: eOlNJTyxKqE
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadee6_nd801-00069-16-responding-to-clicks-sc/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadee6_nd801-00069-16-responding-to-clicks-sc/nd801-00069-16-responding-to-clicks-sc_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadee6_nd801-00069-16-responding-to-clicks-sc/nd801-00069-16-responding-to-clicks-sc_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadee6_nd801-00069-16-responding-to-clicks-sc/nd801-00069-16-responding-to-clicks-sc_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadee6_nd801-00069-16-responding-to-clicks-sc/nd801-00069-16-responding-to-clicks-sc_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadee6_nd801-00069-16-responding-to-clicks-sc/hls/playlist.m3u8'
  - id: 338659
    key: 41c6adc0-139c-4d29-8954-2e61884d3494
    locale: zh-cn
    version: 1.0.0
    title: ‘练习：点击响应和保存状态'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338615
      - 338614
    atoms:
      - id: 338615
        key: c80ff81d-e973-4c1b-9490-dd40deea394d
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # 添加 ClickListener 并保存状态

          在此练习中，你将完成两项任务。首先，在 BodyPartFragment 类中创建一个点击监听器，该监听器会在出现点击操作时更新图片资源！其次，你将添加一些简单的代码，以便保存 Fragment 的当前状态，以便被展示的图片能被保存，并且当 activity 重新启动时（例如屏幕方向发生改变）图片*依然*会显示。

          ### 练习代码
          **练习：**[TFragments.03-Exercise-ClicksAndSavingState](https://github.com/udacity/Android_Me/tree/TFragments.03-Exercise-ClicksAndSavingState/app)

          ## 保存状态

          要保存 Fragment 的状态，你需要替换 onSaveInstanceState 方法，并检查在托管 Activity 中是否*存在*已保存的状态，然后再创建新的 Fragment 实例。
        instructor_notes: ''
        resources: null
      - id: 338614
        key: 8f38a99d-0cb0-4fad-abd1-4b6434435d59
        locale: zh-cn
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - ‘在 BodyPartFragment 类中，在图片视图上设置点击监听器并递增列表索引，同时设置图片资源'
          - ‘如果到达图片列表末尾，则将列表索引重新设为 0（即列表中的第一项）'
          - 创建最终字符串，以存储关于图片列表的状态信息和列表索引
          - 覆盖 onSaveInstanceState 并保存 Fragment 的当前状态
          - ‘在托管 Activity 中，仅在没有之前保存的状态时创建新的 Fragment'
        positive_feedback: |-
          很棒！

          **解决方案：**[[TFragments.03-Solution-ClicksAndSavingState](https://github.com/udacity/Android_Me/tree/TFragments.03-Solution-ClicksAndSavingState/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.03-Exercise-ClicksAndSavingState...TFragments.03-Solution-ClicksAndSavingState)]
        video_feedback: null
        description: 按照任务列表操作，完成此练习。
  - id: 338660
    key: 11adc783-daec-412a-a619-9558f4bd61e8
    locale: zh-cn
    version: 1.0.0
    title: Master List Fragment
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338616
    atoms:
      - id: 338616
        key: 76ec31a7-dc66-4a26-b289-edc54ff1aa6d
        locale: zh-cn
        version: 1.0.0
        title: Master List Fragment
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51490'
          youtube_id: wxmjTIae0lM
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cabba1_nd801-00071-18-masterlistfragment-sc-/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cabba1_nd801-00071-18-masterlistfragment-sc-/nd801-00071-18-masterlistfragment-sc-_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cabba1_nd801-00071-18-masterlistfragment-sc-/nd801-00071-18-masterlistfragment-sc-_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cabba1_nd801-00071-18-masterlistfragment-sc-/nd801-00071-18-masterlistfragment-sc-_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cabba1_nd801-00071-18-masterlistfragment-sc-/nd801-00071-18-masterlistfragment-sc-_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cabba1_nd801-00071-18-masterlistfragment-sc-/hls/playlist.m3u8'
  - id: 338661
    key: e4d6dffa-89ca-43d3-9bd0-47dde7fa6761
    locale: zh-cn
    version: 1.0.0
    title: ‘练习：创建 MasterListFragment'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338617
      - 338618
    atoms:
      - id: 338617
        key: 6924e6d8-76d3-487e-a259-58a7090d69fc
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # 创建并显示 Master List Fragment

          在此练习中，你将创建 MasterListFragment。和 BodyPartFragment 类的创建过程类似，只是你将使用提供的适配器来显示*所有*图片的网格列表。

          ### 练习代码
          **练习：**[TFragments.04-Exercise-CreateMasterListFragment](https://github.com/udacity/Android_Me/tree/TFragments.04-Exercise-CreateMasterListFragment/app)

          提示：你还需要创建新的托管 Activity 来显示此 Fragment 并通过修改 *AndroidManifest* 文件中的参数来将其设为启动状态。
        instructor_notes: ''
        resources: null
      - id: 338618
        key: 61ed2309-6dbe-4e45-afae-657661fc1d92
        locale: zh-cn
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - 创建 fragment_master_list.xml 布局文件来显示所有图片；应该是 GridView
          - 创建一个叫做 MasterListFragment 的新类，该类将显示所有 AndroidMe 图片的 GridView 列表
          - ‘在 MasterListFragment 类中，创建一个新的 MasterListAdapter 并将其设置到 GridView 上’
          - 创建一个叫做 MainActivity 的新 Activity，并创建相应的布局文件，用来显示 MasterListFragment
          - 在 Manifest 中声明 MainActivity，并将其设为打开此应用时启动
        positive_feedback: |-
          很棒！

          **解决方案：**[[TFragments.04-Solution-CreateMasterListFragment](https://github.com/udacity/Android_Me/tree/TFragments.04-Solution-CreateMasterListFragment/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.04-Exercise-CreateMasterListFragment...TFragments.04-Solution-CreateMasterListFragment)]
        video_feedback: null
        description: 按照任务列表操作，完成此练习，并创建最终 Fragment 类！
  - id: 338662
    key: 49a9c01b-e81a-4102-9ba8-c4055c31e22d
    locale: zh-cn
    version: 1.0.0
    title: '在 Fragment 之间通信'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338619
    atoms:
      - id: 338619
        key: 8a2256fd-451b-4d66-be18-25436a06d3b2
        locale: zh-cn
        version: 1.0.0
        title: 在 Fragment 之间通信
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51847'
          youtube_id: 1FI51h4XBIE
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04cae_20-communicating-between-fragments/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04cae_20-communicating-between-fragments/20-communicating-between-fragments_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04cae_20-communicating-between-fragments/20-communicating-between-fragments_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04cae_20-communicating-between-fragments/20-communicating-between-fragments_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04cae_20-communicating-between-fragments/20-communicating-between-fragments_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d04cae_20-communicating-between-fragments/hls/playlist.m3u8'
  - id: 338663
    key: 5759d392-f965-4270-b6f7-3d92f4f7fa47
    locale: zh-cn
    version: 1.0.0
    title: 定义接口
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338621
    atoms:
      - id: 338621
        key: 0ee9a583-6267-476d-a990-cb7bcf94c380
        locale: zh-cn
        version: 1.0.0
        title: 定义接口
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51499'
          youtube_id: h_CLPqaWhEg
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cacc6c_nd801-00074-21-define-an-interface-sc/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cacc6c_nd801-00074-21-define-an-interface-sc/nd801-00074-21-define-an-interface-sc_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cacc6c_nd801-00074-21-define-an-interface-sc/nd801-00074-21-define-an-interface-sc_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cacc6c_nd801-00074-21-define-an-interface-sc/nd801-00074-21-define-an-interface-sc_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cacc6c_nd801-00074-21-define-an-interface-sc/nd801-00074-21-define-an-interface-sc_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cacc6c_nd801-00074-21-define-an-interface-sc/hls/playlist.m3u8'
  - id: 338664
    key: a814286a-4223-4bb8-9a61-881299668275
    locale: zh-cn
    version: 1.0.0
    title: ‘练习：接口通信'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338622
      - 338623
    atoms:
      - id: 338622
        key: c5c1c46b-e439-46dc-ae8b-bfbce0614d28
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # 定义接口

          在此练习中，你将在 MasterListFragment 类中定义一个接口，使其“回调”或与其托管 Activity 通信。

          ### 练习代码
          **练习：**[TFragments.05-Exercise-InterfaceCommunication](https://github.com/udacity/Android_Me/tree/TFragments.04-Exercise-InterfaceCommunication/app)

          ## 为何使用接口？

          为了使 Fragment 模块化并且可以重复利用，你不能让它们相互之间直接通信或直接与托管 Activity 相连。接口使它们能够通信并保持模块化，因为它们可以被*任何*托管 Activity 实现，这样 Fragment 就不会附属于某个 Activity 
        instructor_notes: ''
        resources: null
      - id: 338623
        key: ca53bdbd-75fb-4c07-8248-6beee25aff15
        locale: zh-cn
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - ‘在 MasterListFragment 类中定义一个新的接口 OnImageClickListener，该监听器会在托管 Activity 中触发回调'
          - 覆盖 onAttach 以确保容器 Activity 已实现回调
          - 在 gridView 上设置点击监听器，并在点击某项时触发回调 onImageSelected
          - ‘在 MainActivity 中，实现 MasterListFragment 回调：OnImageClickListener'
          - 定义 onImageSelected 回调方法的行为，并创建一条 Toast 消息，用来显示所点击的位置
        positive_feedback: |-
          很棒！

          **解决方案：**[[TFragments.05-Solution-InterfaceCommunication](https://github.com/udacity/Android_Me/tree/TFragments.05-Solution-InterfaceCommunication/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.04-Exercise-InterfaceCommunication...TFragments.05-Solution-InterfaceCommunication)]
        video_feedback: null
        description: 按照这些任务操作，实现 Fragment 到 Activity 通信。
  - id: 338665
    key: fe9ed686-be58-4277-b494-4b9d6c41a6e2
    locale: zh-cn
    version: 1.0.0
    title: 在 Activity 之间通信
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338624
    atoms:
      - id: 338624
        key: 5997fe03-6419-45f4-a862-594657745420
        locale: zh-cn
        version: 1.0.0
        title: 在 Activity 之间通信
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51500'
          youtube_id: r69SVwRtQ1E
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cad309_nd801-00076-23-communicate-between-activities-sc-/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cad309_nd801-00076-23-communicate-between-activities-sc-/nd801-00076-23-communicate-between-activities-sc-_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cad309_nd801-00076-23-communicate-between-activities-sc-/nd801-00076-23-communicate-between-activities-sc-_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cad309_nd801-00076-23-communicate-between-activities-sc-/nd801-00076-23-communicate-between-activities-sc-_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cad309_nd801-00076-23-communicate-between-activities-sc-/nd801-00076-23-communicate-between-activities-sc-_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cad309_nd801-00076-23-communicate-between-activities-sc-/hls/playlist.m3u8'
  - id: 338666
    key: 154d3714-c4ba-4389-8c10-584baac47804
    locale: zh-cn
    version: 1.0.0
    title: ‘练习：在 Activity 之间通信'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338625
      - 338626
    atoms:
      - id: 338625
        key: 023dd537-c06f-4c3e-afa4-7643ba530cb2
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # 在 Activity 之间通信

          在此练习中，你将通过实现 Master List 和 AndroidMe Activity 之间的通信，完成手机应用。这两个 Activity 都将能够对用户输入做出响应！

          ### 练习代码
          **练习：**[TFragments.06-Exercise-CommunicateBetweenActivities](https://github.com/udacity/Android_Me/tree/TFragments.06-Exercise-CommunicateBetweenActivities/app)
        instructor_notes: ''
        resources: null
      - id: 338626
        key: 62a71ec5-2b58-481a-9ebd-8ab2e21365ce
        locale: zh-cn
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - 将 Master List 布局变成 LinearLayout 并在 gridview 的底部添加“Next”按钮
          - ‘在 MainActivity 中，根据用户的点击位置存储头部、身体和腿部 BodyPartFragment 的所选列表索引'
          - 将所选图片信息放入 Bundle 并将其附到将启动 AndroidMeActivity 的 Intent 上
          - 获取“Next”按钮的引用，并在该按钮被点击时启动该 Intent
          - ‘在 AndroidMeActivity 中，检索通过 Intent 发送的捆绑列表索引值，并使用这些值来显示相关 AndroidMe 身体图片'
        positive_feedback: |-
          很棒！

          **解决方案：**[[TFragments.06-Solution-CommunicateBetweenActivities](https://github.com/udacity/Android_Me/tree/TFragments.06-Solution-CommunicateBetweenActivities/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.06-Exercise-CommunicateBetweenActivities...TFragments.06-Solution-CommunicateBetweenActivities)]
        video_feedback: null
        description: 现在该你了！请按照这些步骤操作，完成这道练习。
  - id: 338667
    key: c2fa39f7-e4ed-4340-97dc-351dc7b84fbe
    locale: zh-cn
    version: 1.0.0
    title: ‘练习：双窗格布局'
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338627
      - 338628
      - 338629
    atoms:
      - id: 338627
        key: 9e34ee03-421b-48e3-b8f4-bacd41b79d09
        locale: zh-cn
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        text: |
          #  任务名称

          在最后这道练习中，你将为平板电脑视图创建双窗格布局。你需要为平板电脑创建新的布局文件夹，并切实地利用 Fragment 的灵活、可重复利用及模块化特性！

          ### 练习代码
          **练习：**[TFragments.07-Exercise-TwoPaneUI](https://github.com/udacity/Android_Me/tree/TFragments.07-Exercise-TwoPaneUI/app)

          ## 自适应设计

          创建完双窗格布局，我们在这节课开头提到的 Master-Detail 流程就完毕了。这是一个极为常见的设计模式，也是此应用的最后一步！:)

          如果你决定在 UI 中实施分隔线，请参阅[此建议](http://stackoverflow.com/a/14533085)。 
        instructor_notes: ''
        resources: null
      - id: 338628
        key: 5986a9c3-3946-48a5-b67d-497da2decced
        locale: zh-cn
        version: 1.0.0
        title: 双窗格布局
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51503'
          youtube_id: 9OK-H8N2v2U
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadf0c_nd801-00078-25-two-pane-layout-sc-/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadf0c_nd801-00078-25-two-pane-layout-sc-/nd801-00078-25-two-pane-layout-sc-_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadf0c_nd801-00078-25-two-pane-layout-sc-/nd801-00078-25-two-pane-layout-sc-_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadf0c_nd801-00078-25-two-pane-layout-sc-/nd801-00078-25-two-pane-layout-sc-_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadf0c_nd801-00078-25-two-pane-layout-sc-/nd801-00078-25-two-pane-layout-sc-_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cadf0c_nd801-00078-25-two-pane-layout-sc-/hls/playlist.m3u8'
      - id: 338629
        key: 53e3cce2-a739-4ccf-93a9-e33c6cb97b70
        locale: zh-cn
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - ‘在新文件夹中为平板电脑创建新的双窗格 activity_main layout (sw600dp)，并覆盖默认的布局资源'
          - 构建布局来并排显示 MasterListFragment 及所有 BodyPartFragment
          - ‘在 MainActivity 中，创建一个变量来跟踪是显示双窗格还是单窗格 UI'
          - ‘如果你要构建双窗格视图，请添加新的 BodyPartFragment 以创建初始 AndroidMe 图片’
          - ‘在 onImageSelected 回调中，处理双窗格 case 并且当用户选中 master list 中的新图片时替换现有的 Fragment'
        positive_feedback: |-
          哇，很棒！你已经创建完这款应用了！

          **解决方案：**[[TFragments.07-Solution-TwoPaneUI](https://github.com/udacity/Android_Me/tree/TFragments.07-Solution-TwoPaneUI/app)][[Diff](https://github.com/udacity/Android_Me/compare/TFragments.07-Exercise-TwoPaneUI...TFragments.07-Solution-TwoPaneUI)]
        video_feedback: null
        description: 按照这些步骤操作，创建在平板电脑屏幕上看起来很美观的 UI！
  - id: 338668
    key: b8bc063f-a8a6-40a5-8067-37c8b1d72746
    locale: zh-cn
    version: 1.0.0
    title: Fragment 结尾部分
    semantic_type: Concept
    updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 338630
    atoms:
      - id: 338630
        key: 360801be-ebf7-4637-9239-f4358e866969
        locale: zh-cn
        version: 1.0.0
        title: Fragment 结尾部分
        semantic_type: VideoAtom
        updated_at: 'Fri Jun 23 2017 02:09:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51488'
          youtube_id: OSQoTG2NgSQ
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cab93f_nd801-0008028-outro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cab93f_nd801-0008028-outro/nd801-0008028-outro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cab93f_nd801-0008028-outro/nd801-0008028-outro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cab93f_nd801-0008028-outro/nd801-0008028-outro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cab93f_nd801-0008028-outro/nd801-0008028-outro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58cab93f_nd801-0008028-outro/hls/playlist.m3u8'
