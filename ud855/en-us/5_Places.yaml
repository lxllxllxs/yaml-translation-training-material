id: 268646
key: 0dc19666-d446-4c1e-8c75-13a64af3aa2e
locale: en-us
version: 1.0.0
title: Places
semantic_type: Lesson
updated_at: 'Tue Jul 11 2017 05:26:13 GMT+0000 (UTC)'
is_public: true
image:
  url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/5902534b_nd801-ud855-places/nd801-ud855-places.png'
  width: 394
  height: 392
video: null
summary: 'In this lesson, you''ll learn how Android locates its device in the globe using GPS and other techniques. You will get to use Geofences to trigger actions when the device enters or exits a location'
lesson_type: Classroom
duration: 120
is_project_lesson: false
_concepts_ids:
  - 288364
  - 289224
  - 288269
  - 288274
  - 282978
  - 288316
  - 282980
  - 288317
  - 283096
  - 289705
  - 288318
  - 289722
  - 288319
  - 283127
  - 283138
  - 288320
  - 283147
  - 288321
  - 288322
  - 345629
  - 288323
  - 283156
  - 288325
_project_id: null
concepts:
  - id: 288364
    key: a796cc75-7fa6-47ae-ac49-43a24c17e7b3
    locale: en-us
    version: 1.0.0
    title: Introduction to Places
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 23:34:39 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 288386
    atoms:
      - id: 288386
        key: 8187e36b-fad7-423c-903f-9ae938a0929c
        locale: en-us
        version: 1.0.0
        title: ShushMe Intro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:33:36 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '52366'
          youtube_id: WPaE46WJy9c
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58daf922_01-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58daf922_01-intro/01-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58daf922_01-intro/01-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58daf922_01-intro/01-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58daf922_01-intro/01-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58daf922_01-intro/hls/playlist.m3u8'
  - id: 289224
    key: c00afaf0-b87c-42d3-bf96-aa8199c67250
    locale: en-us
    version: 1.0.0
    title: ShushMe Source Code
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:17:20 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 289225
      - 289227
    atoms:
      - id: 289225
        key: 93170742-f0e2-4145-891f-632b80cba077
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Mon Apr 03 2017 14:09:13 GMT+0000 (UTC)'
        is_public: true
        text: |+
          # ShushMe Code

          The code for this app can be found in this [Github](https://github.com/udacity/AdvancedAndroid_Shushme) repository.

          Through out this lesson, we will be building up this app step by step. Each step is a separate branch in the repository, the starter code can be downloaded from this [branch](https://github.com/udacity/AdvancedAndroid_Shushme/tree/StarterCode)

          Later on we will go through the starter code and explain the code that's already included in it.

          ## What is ShushMe

          ShushMe allows you to pick a set of locations using Google's Places API, it then creates geofences around those places and turns your device into silent mode if you enter any of them. Once the device exits again ShushMe turns your device back to normal (whatever ringer mode and volume you had before entering)

        instructor_notes: ''
        resources: null
      - id: 289227
        key: 7dbe5259-2683-4525-b190-e7fae8b012b1
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Mon Apr 03 2017 14:12:48 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/58e25857_screen-shot-2017-04-03-at-4.12.23-pm/screen-shot-2017-04-03-at-4.12.23-pm.png'
        width: 1340
        height: 776
        caption: ''
        resources: null
        instructor_notes: null
  - id: 288269
    key: 1e4e2f45-374d-411b-aac1-a6036fe7ee97
    locale: en-us
    version: 1.0.0
    title: How Location Works
    semantic_type: Concept
    updated_at: 'Wed Apr 19 2017 21:15:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 298968
    atoms:
      - id: 298968
        key: 4b8ca9ba-3e79-4eed-8bf2-1ea5b0333b3a
        locale: en-us
        version: 1.0.0
        title: How Location Works
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:29:43 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53804'
          youtube_id: 0P4zvnBFkvQ
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d285_02-how-location-works/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d285_02-how-location-works/02-how-location-works_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d285_02-how-location-works/02-how-location-works_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d285_02-how-location-works/02-how-location-works_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d285_02-how-location-works/02-how-location-works_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d285_02-how-location-works/hls/playlist.m3u8'
  - id: 288274
    key: f5af8eb0-07fb-46a6-aa08-24440de36c7d
    locale: en-us
    version: 1.0.0
    title: Google Play Services
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:22:23 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 289285
    atoms:
      - id: 289285
        key: 01208dab-2212-4c8b-adf7-355921e9398b
        locale: en-us
        version: 1.0.0
        title: Google Play Services
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:38:51 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '52557'
          youtube_id: ogigCGWdNn8
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2bd6f_3-google-play-services/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2bd6f_3-google-play-services/3-google-play-services_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2bd6f_3-google-play-services/3-google-play-services_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2bd6f_3-google-play-services/3-google-play-services_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2bd6f_3-google-play-services/3-google-play-services_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2bd6f_3-google-play-services/hls/playlist.m3u8'
  - id: 282978
    key: 8243efd2-55e4-49f0-8df2-ffe7877d758a
    locale: en-us
    version: 1.0.0
    title: API Key Setup Instructions
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:22:28 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 282979
    atoms:
      - id: 282979
        key: 4161e47f-8460-46b8-bcde-d7ba99ebdbf5
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 04 2017 19:31:38 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # API Key Setup Instructions

          1. Go to the [Google API Console](https://console.developers.google.com/flows/enableapi?apiid=placesandroid&reusekey=true).
          2. Create or select a project.
          3. Click Continue to enable the Google Places API for Android.
          4. On the Credentials page, get an API key. 

          **Note**: If you have an existing API key with Android restrictions, you may use that key.

          ### Restricting your API key

          To control who can use this key to access Google's API; restrict the key to a certain Android app

          1. From the dialog displaying the API key, select Restrict key to set an Android restriction on the API key.
          2. In the Restrictions section, select Android apps, then enter your app's SHA-1 fingerprint and package name. For example:
          BB:0D:AC:74:D3:21:E1:43:67:71:9B:62:91:AF:A1:66:6E:44:5D:75
          com.example.android.places-example
          3. Click Save.

          To find your app's SHA-1 fingerprint information and for more information refer to this [Google documentation](https://developers.google.com/places/android-api/signup).

          Your new Android-restricted API key appears in the list of API keys for your project. An API key is a string of characters, something like this:

          ``` AIzaSyBdVl-cTICSwYKrZ95SuvNw7dbMuDt1KG0 ```

          It may take up to 5 minutes for the key to be fully provisioned. If the key does not work immediately, try again in 5 minutes.
        instructor_notes: ''
        resources: null
  - id: 288316
    key: 07569457-bf4b-4431-8733-bf83221e63b6
    locale: en-us
    version: 1.0.0
    title: 'Including the API Key '
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:22:51 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 288329
    atoms:
      - id: 288329
        key: d839439d-e972-403b-925c-81daddbd9aa2
        locale: en-us
        version: 1.0.0
        title: Including the API Key
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:45 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '52358'
          youtube_id: aIZG-sdYL_w
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade4e_5-including-the-api-key/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade4e_5-including-the-api-key/5-including-the-api-key_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade4e_5-including-the-api-key/5-including-the-api-key_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade4e_5-including-the-api-key/5-including-the-api-key_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade4e_5-including-the-api-key/5-including-the-api-key_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade4e_5-including-the-api-key/hls/playlist.m3u8'
  - id: 282980
    key: 5acb4807-6239-4fde-98d9-9aee8216e1f7
    locale: en-us
    version: 1.0.0
    title: API Documentation
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 21:52:38 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 283094
      - 283095
    atoms:
      - id: 283094
        key: 56ac0edb-d0da-47f8-842a-3a9fcb690078
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: CheckboxQuizAtom
        updated_at: 'Fri Mar 17 2017 00:17:03 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: |-
            Check the documentation for the Places API and match the functionality that exists in it.
            Places API: https://developers.google.com/places/android-api/reference
          correct_feedback: 'Correct! These are methods from the Places API. '
          video_feedback: null
          default_feedback: null
          answers:
            - id: a1489708980721
              text: '`getCurrentPlace`'
              is_correct: true
              incorrect_feedback: null
            - id: a1489709063985
              text: '`getLatitude`'
              is_correct: false
              incorrect_feedback: null
            - id: a1489709079064
              text: '`getPlacePhotos`'
              is_correct: true
              incorrect_feedback: null
            - id: a1489709091684
              text: '`getBearing`'
              is_correct: false
              incorrect_feedback: null
            - id: a1489709310788
              text: '`getPlacemat`'
              is_correct: false
              incorrect_feedback: null
      - id: 283095
        key: c69c84c1-1c62-40c7-9e66-005cdb812b31
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: CheckboxQuizAtom
        updated_at: 'Fri Mar 17 2017 00:16:36 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: |-
            Check the documentation for the Location API and match the functionality that exists in it. 
            Location API: https://developer.android.com/reference/android/location/Location.html
          correct_feedback: 'Great work! These methods are from the Location API`. '
          video_feedback: null
          default_feedback: null
          answers:
            - id: a1489709600723
              text: '`getPlacePhotos`'
              is_correct: false
              incorrect_feedback: null
            - id: a1489709622898
              text: '`getLatitude`'
              is_correct: true
              incorrect_feedback: null
            - id: a1489709680250
              text: '`getBearing`'
              is_correct: true
              incorrect_feedback: null
            - id: a1489709689104
              text: '`getWheel`'
              is_correct: false
              incorrect_feedback: null
  - id: 288317
    key: b609e25d-5b65-476f-870e-cb2ee628d106
    locale: en-us
    version: 1.0.0
    title: Starter Code
    semantic_type: Concept
    updated_at: 'Wed Apr 19 2017 21:16:25 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 298970
    atoms:
      - id: 298970
        key: 07c2615f-be6a-4dd6-b35c-626a6eddb1c6
        locale: en-us
        version: 1.0.0
        title: Starter Code
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:39:08 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53805'
          youtube_id: N5z004ySBoc
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d290_07-starter-code-v1/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d290_07-starter-code-v1/07-starter-code-v1_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d290_07-starter-code-v1/07-starter-code-v1_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d290_07-starter-code-v1/07-starter-code-v1_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d290_07-starter-code-v1/07-starter-code-v1_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d290_07-starter-code-v1/hls/playlist.m3u8'
  - id: 283096
    key: 145f6016-00d5-49a7-9225-90c24d4d1a48
    locale: en-us
    version: 1.0.0
    title: Google API Client
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:22:54 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 283108
      - 283109
      - 283111
      - 283112
      - 283113
      - 283114
      - 283117
      - 283119
      - 283120
      - 283122
      - 283097
      - 289669
    atoms:
      - id: 283108
        key: 44ef5391-3f72-4f30-9f24-d1e6978141d0
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 04 2017 21:14:28 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Google API Client

          Some Google Play Services APIs require you to create a client that will connect to Google Play Services and use that connection to communicate with the APIs
        instructor_notes: ''
        resources: null
      - id: 283109
        key: 1203745f-d1d6-49a7-9d09-263584ede6d0
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 00:55:56 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb3417_pasted-image-0/pasted-image-0.png'
        width: 1440
        height: 880
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283111
        key: 6167ba2d-ac84-458d-b5f8-9c55ee5766a1
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 17 2017 00:58:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          In our case, both places API and location services API require that client, so how do we create one?
          A Google API Client is created using `GoogleApiClient.Builder` as follows:
        instructor_notes: ''
        resources: null
      - id: 283112
        key: ddba99ef-f906-4477-b2d5-42118baeb83b
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 00:58:17 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb34a4_pasted-image-0-1/pasted-image-0-1.png'
        width: 878
        height: 302
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283113
        key: 5b515af7-a407-47cd-b0c2-ec1237c6fc59
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Wed Mar 29 2017 16:19:02 GMT+0000 (UTC)'
        is_public: true
        text: |-
          First 2 methods, `addConnectionCallbacks` and `addOnConnectionFailedListener`, are setting the callbacks that will notify when a connection is successful, since we will be creating this client in `MainActivity`, we will set the callbacks to this.
          `addApi` is then called to add the API libraries we are planning to use, as we mentioned earlier we will be using the location services api and the places api.
          `enableAutoManage` means that the client will connect/disconnect on its own, otherwise you will have to call connect and disconnect explicitly.
          And then finally build creates the actual client object.

          Now, since we’ve chosen to set this (`MainActivity`) as our callback listener, we need to implement a couple of interfaces:
        instructor_notes: ''
        resources: null
      - id: 283114
        key: 480d6a57-1aec-4398-9390-39132480b3fd
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 00:59:24 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb34e7_pasted-image-0-2/pasted-image-0-2.png'
        width: 930
        height: 170
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283117
        key: 86121c4b-1f3e-404a-9ff4-d91c0646a4da
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 17 2017 01:01:13 GMT+0000 (UTC)'
        is_public: true
        text: 'And hence implement the required methods:'
        instructor_notes: ''
        resources: null
      - id: 283119
        key: b9c072ef-fed7-4438-8dfd-764ade3044a6
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 01:02:36 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb358e_pasted-image-0-3/pasted-image-0-3.png'
        width: 894
        height: 176
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283120
        key: 99f83595-253e-41bd-8f7d-21eeb4057171
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 01:02:48 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb35b3_pasted-image-0-4/pasted-image-0-4.png'
        width: 788
        height: 182
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283122
        key: 8956abc3-8a25-48f8-aaad-69fa38ac48f0
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 01:03:30 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb35dd_pasted-image-0-5/pasted-image-0-5.png'
        width: 992
        height: 170
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283097
        key: 2fa8fd7f-bc27-46ae-a734-537fbf596472
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 04 2017 20:15:41 GMT+0000 (UTC)'
        is_public: true
        text: |-
          Once the client automatically connects to  Google Play Services, `onConnected` method will fire, that is if the connections was successful.

          If for any reason it wasn’t, `onConnectionFailed` will fire instead.

          `onConnectionSuspended` as the name suggests fires when the client’s AutoManager decided to suspend the connection.

          For now, all three methods are simply logging a message when any of them gets called.

          Let's give that a try ...
        instructor_notes: ''
        resources: null
      - id: 289669
        key: 94c3d160-4555-4518-a838-14d649511fb1
        locale: en-us
        version: 1.0.0
        title: ' 9 Demo GoogleAPIClient'
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:41:04 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '52364'
          youtube_id: NFvtUoKy3L0
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dae4b4_9-demo-googleapiclient/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dae4b4_9-demo-googleapiclient/9-demo-googleapiclient_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dae4b4_9-demo-googleapiclient/9-demo-googleapiclient_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dae4b4_9-demo-googleapiclient/9-demo-googleapiclient_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dae4b4_9-demo-googleapiclient/9-demo-googleapiclient_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dae4b4_9-demo-googleapiclient/hls/playlist.m3u8'
  - id: 289705
    key: 308376ba-7d87-4c77-81a1-f2991062ebf0
    locale: en-us
    version: 1.0.0
    title: 'Exercise: GoogleAPIClient'
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:22:39 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 289719
      - 289716
    atoms:
      - id: 289719
        key: aecb9e4c-889f-46d1-9336-c0d6ada0b84e
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 13:19:39 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Connecting a Google API Client

          Go ahead and build a Google API Client and see if and when these log messages are displayed.

          You will also need to setup the location permissions as we've discussed earlier.

          ## Exercise Code

          **Exercise:** [T0X.01-Exercise-GoogleApiClient](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.01-Exercise-GoogleApiClient)
        instructor_notes: ''
        resources: null
      - id: 289716
        key: 72c9c93a-23fc-4d3c-ac1e-8b5ab99f3fbe
        locale: en-us
        version: 1.0.0
        title: Now it's your turn
        semantic_type: TaskListAtom
        updated_at: 'Fri Apr 14 2017 23:40:58 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Add meta-data tag with API key
          - Add uses-permission tags for INTERNET and ACCESS_FINE_LOCATION
          - Add play-services-places and play-services-location dependencies
          - Create a GoogleApiClient with the LocationServices API and GEO_DATA_API
          - 'Override onConnected, onConnectionSuspended and onConnectionFailed for GoogleApiClient'
          - Add a LinearLayout that contains a checkbox to grant the location permissions
          - Override onResume and inside it initialize the location permissions checkbox
          - Implement onLocationPermissionClicked to handle the CheckBox click event
          - Implement the Add Place Button click event to show  a toast message with the permission status
        positive_feedback: |-
          Well Done! Now that we have the client all working, let's have a look at another feature called Place Picker

          **Solution:** [[T0X.01-Solution-GoogleApiClient](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.01-Solution-GoogleApiClient)][[Diff](https://github.com/udacity/AdvancedAndroid_Shushme/compare/T0X.01-Exercise-GoogleApiClient...T0X.01-Solution-GoogleApiClient?expand=1)]
        video_feedback: null
        description: Follow the TODOs in the comments to set up the Google API Client and grant location permissions
  - id: 288318
    key: 57045f88-6f6e-41a5-97f1-42e56fcd802a
    locale: en-us
    version: 1.0.0
    title: 'Place Picker '
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:23:23 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 288395
    atoms:
      - id: 288395
        key: d9455cef-d4a0-40a5-868a-19aa6c8c496c
        locale: en-us
        version: 1.0.0
        title: Place Picker
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:45 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '52399'
          youtube_id: a2gKRkY4hHY
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58db0c07_10-exercise-2-place-picker/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58db0c07_10-exercise-2-place-picker/10-exercise-2-place-picker_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58db0c07_10-exercise-2-place-picker/10-exercise-2-place-picker_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58db0c07_10-exercise-2-place-picker/10-exercise-2-place-picker_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58db0c07_10-exercise-2-place-picker/10-exercise-2-place-picker_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58db0c07_10-exercise-2-place-picker/hls/playlist.m3u8'
  - id: 289722
    key: c6c12a90-a958-4f8d-957e-080a4cbf7ea9
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Place Picker'
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:23:40 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 291663
    atoms:
      - id: 291663
        key: cffc8637-0236-4df6-a761-70de95228b6d
        locale: en-us
        version: 1.0.0
        title: 'Exercise: Place Picker'
        semantic_type: TaskListAtom
        updated_at: 'Fri Apr 14 2017 19:23:53 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Create a PlacePicker.IntentBuilder and call startActivityForResult
          - Handle GooglePlayServices exceptions
          - Implement onActivityResult and check that the requestCode is PLACE_PICKER_REQUEST
          - 'In onActivityResult, use PlacePicker.getPlace to extract the Place ID and insert it into the DB'
        positive_feedback: '**Solution:** [[T0X.02-Solution-PlacePicker](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.02-Solution-PlacePicker)][[Diff](https://github.com/udacity/AdvancedAndroid_Shushme/compare/T0X.02-Exercise-PlacePicker...T0X.02-Solution-PlacePicker)]'
        video_feedback: null
        description: |-
          Now it's your turn, follow the TODOs in the code comments and make the app launch a place picker interface when the "Add New Location" button is pressed.

          ## Exercise Code

          **Exercise:** [T0X.02-Exercise-PlacePicker](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.02-Exercise-PlacePicker)
  - id: 288319
    key: af2dc19a-8bd2-4f87-8970-c2ec4f610a2e
    locale: en-us
    version: 1.0.0
    title: Get Place by ID
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:24:31 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 289271
    atoms:
      - id: 289271
        key: 26fd6c9e-9605-4fff-9333-564ed818d9e9
        locale: en-us
        version: 1.0.0
        title: Get Place by ID
        semantic_type: VideoAtom
        updated_at: 'Wed Jul 05 2017 22:56:09 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: '<a href="https://developers.google.com/places/android-api/place-details" target="_blank">Places Documentation</a>'
        resources: null
        video:
          id: '52547'
          youtube_id: qzVpZqzMN4w
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2a50f_locations-11-sc.-missing-last-demo2/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2a50f_locations-11-sc.-missing-last-demo2/locations-11-sc.-missing-last-demo2_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2a50f_locations-11-sc.-missing-last-demo2/locations-11-sc.-missing-last-demo2_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2a50f_locations-11-sc.-missing-last-demo2/locations-11-sc.-missing-last-demo2_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2a50f_locations-11-sc.-missing-last-demo2/locations-11-sc.-missing-last-demo2_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e2a50f_locations-11-sc.-missing-last-demo2/hls/playlist.m3u8'
  - id: 283127
    key: 9b5d5329-260c-440c-9d97-38c5c6420913
    locale: en-us
    version: 1.0.0
    title: 'Places API: Privacy and Attribution'
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:23:37 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 283130
      - 283134
      - 283135
      - 289384
      - 283136
      - 283137
    atoms:
      - id: 283130
        key: d6f42043-cb10-41f4-961d-c567a1e20084
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 17 2017 01:06:43 GMT+0000 (UTC)'
        is_public: true
        text: |-
          Before we continue developing the remaining features of the app, it’s important to note that Google requires any developer to follow certain rules when using their APIs:
          https://developers.google.com/places/web-service/policies

          When using any API, you should make a habit of familiarizing yourself with the terms and conditions that accompany it, as for the Places API, I’ve linked the policy page in the instructor notes below.
          We’ve already mentioned  the restriction on caching places information locally for longer than 30 days.
          Another important part of the Places API policies is to attribute any information obtained from that API to Google
          This is achieved by displaying the “Powered by google” logo in any screen that displays information obtained by the places API which of course includes the list we just created.
        instructor_notes: ''
        resources: null
      - id: 283134
        key: 283b05cc-6ae4-4840-94fc-816345b860a1
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 01:07:42 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb36ce_pasted-image-0-6/pasted-image-0-6.png'
        width: 710
        height: 302
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283135
        key: 0f6a61dc-066c-4c61-9d1c-e1aa500f69f6
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 04 2017 10:53:55 GMT+0000 (UTC)'
        is_public: true
        text: 'The Places library bundles 2 versions of those logos for you to use directly without any modification, a light version and a dark version based on your background.'
        instructor_notes: ''
        resources: null
      - id: 289384
        key: b7a44dac-cb07-4399-9959-faa289ffb566
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 04 2017 10:54:14 GMT+0000 (UTC)'
        is_public: true
        text: |-
          ### Terms of Service
          You might also be wondering why are we requesting the places information from the server everytime we want to display them in the recycler view! After all the place address and name shouldn't really change that frequently, can't we just store those details in the database and display that instead?

          Well, according to [this section](https://developers.google.com/maps/terms#section_10_5) in the Terms of Service, you are not allowed to cache any data from those Places API for more than 30 days, as well as other limitations on how to store them. You can of course still cache them for when say the internet connection is lost and you would rather display the list than nothing at all, however, to comply with the terms, you will have to rebuild the database every 30 days and make sure all other constraints are met

          Another requirement when using the Places API (or any Google Map related API for that matter) is to make available a **Terms of Use** and a **Privacy Policy** with your application which meets the guidelines outlined [here](https://developers.google.com/places/web-service/policies)
        instructor_notes: ''
        resources: null
      - id: 283136
        key: 09d83a0a-b02c-4da7-b069-75d6b4b0e90f
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Mar 17 2017 01:09:27 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/March/58cb3740_pasted-image-0-7/pasted-image-0-7.png'
        width: 1532
        height: 728
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283137
        key: fd511842-0b07-44f7-852c-59bde63d4c63
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 17 2017 01:10:05 GMT+0000 (UTC)'
        is_public: true
        text: |-
          You should always make sure the Terms of Use and Privacy Policy are available in the Play Store so that when users download the application they understand the conditions they are implicitly agreeing upon. You can also include these terms somewhere inside the application itself (e.g in an About page that can be reached through a Settings menu, etc.).

          Make sure, as part of this exercise, to include the powered by Google logo and a link to the privacy policy at the bottom of the screen.
        instructor_notes: ''
        resources: null
  - id: 283138
    key: e3199c61-4c12-4f97-bc24-fb8a247119c9
    locale: en-us
    version: 1.0.0
    title: 'Exercise: GetPlaceById'
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:24:19 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 291664
      - 283140
    atoms:
      - id: 291664
        key: 8f64de40-dba9-472b-a67e-833b5c49fe86
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 13:37:32 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Get place by ID

          For this exercise, we've seen how to use getPlaceById() method to retrieve the Places details from the server and display them in the recycler view.
          We've also seen how important it is to attribute any Google Places API data to google using the "powered by Google" logo.

          ## Exercise Code

          **Exercise:** [T0X.03-Exercise-GetPlaceById](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.03-Exercise-GetPlaceById)
        instructor_notes: ''
        resources: null
      - id: 283140
        key: 9136b471-4fd6-433c-baf7-4f52bd8c14eb
        locale: en-us
        version: 1.0.0
        title: 'Exercise: GetPlaceById'
        semantic_type: TaskListAtom
        updated_at: 'Fri Apr 14 2017 19:24:14 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Implement a method called refreshPlacesData that queries all the locally stored Places IDs and calls Places.GeoDataApi.getPlaceById with that list of IDs.
          - Modify the Adapter to use a PlaceBuffer as the data source.
          - Implement a public method swapPlaces in the Adapter.
          - Set the getPlaceById callBack so that onResult calls the Adapter's swapPlaces with the result.
          - Call refreshPlacesData in GoogleApiClient's onConnected and in the Add New Place button click event.
          - Add the "Powered by Google" logo and a web link to the Privacy Policy web page.
        positive_feedback: '**Solution:** [[T0X.03-Solution-GetPlaceById](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.03-Solution-GetPlaceById)][[Diff](https://github.com/udacity/AdvancedAndroid_Shushme/compare/T0X.03-Exercise-GetPlaceById...T0X.03-Solution-GetPlaceById)]'
        video_feedback: null
        description: Now it's your turn. Follow the steps below to complete this coding exercise.
  - id: 288320
    key: caa1654c-1060-4a0f-8935-1efd4683168e
    locale: en-us
    version: 1.0.0
    title: Geofences
    semantic_type: Concept
    updated_at: 'Wed Apr 19 2017 21:17:21 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 298971
    atoms:
      - id: 298971
        key: 99b201d2-545a-41cb-b7ee-2ae8bdb3ff0d
        locale: en-us
        version: 1.0.0
        title: Geofences
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:39:08 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53806'
          youtube_id: y8ri4a19p3o
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d298_14-geofences/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d298_14-geofences/14-geofences_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d298_14-geofences/14-geofences_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d298_14-geofences/14-geofences_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d298_14-geofences/14-geofences_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d298_14-geofences/hls/playlist.m3u8'
  - id: 283147
    key: 02b2690b-ce5b-444f-9848-e27e1f671997
    locale: en-us
    version: 1.0.0
    title: Geofencing vs. GPS Polling
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 21:55:39 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 283150
    atoms:
      - id: 283150
        key: 64677932-1dac-4fc9-a8da-9965b84d964a
        locale: en-us
        version: 1.0.0
        title: Geofencing vs. Polling
        semantic_type: CheckboxQuizAtom
        updated_at: 'Fri Mar 17 2017 01:21:18 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: Which of these scenarios sound like a better fit for Geofences compared to polling the GPS fix?
          correct_feedback: 'Awesome! These are good scenarios for Geofencing because you only need to track when a person enters/leaves a particular geofence. '
          video_feedback: null
          default_feedback: null
          answers:
            - id: a1489713508101
              text: Car navigation system
              is_correct: false
              incorrect_feedback: null
            - id: a1489713526952
              text: Running tracker (tracks the path you run)
              is_correct: false
              incorrect_feedback: null
            - id: a1489713537754
              text: Reminder as you walk home/office
              is_correct: true
              incorrect_feedback: null
            - id: a1489713547372
              text: Tracks the number of times you’ve been to the gym every month
              is_correct: true
              incorrect_feedback: null
  - id: 288321
    key: 8a72a33f-0337-464a-9786-cb2cfcc28ed0
    locale: en-us
    version: 1.0.0
    title: Geofencing
    semantic_type: Concept
    updated_at: 'Tue Jul 11 2017 05:30:55 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 298973
      - 345632
    atoms:
      - id: 298973
        key: 8eb9b362-7210-4259-9f3e-5a38df84b33b
        locale: en-us
        version: 1.0.0
        title: 16 Exercise 4 Geofencing
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:58 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53807'
          youtube_id: XCvSloK-d8M
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2a4_16-exercise-4-geofencing/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2a4_16-exercise-4-geofencing/16-exercise-4-geofencing_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2a4_16-exercise-4-geofencing/16-exercise-4-geofencing_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2a4_16-exercise-4-geofencing/16-exercise-4-geofencing_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2a4_16-exercise-4-geofencing/16-exercise-4-geofencing_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2a4_16-exercise-4-geofencing/hls/playlist.m3u8'
      - id: 345632
        key: 01e89b45-67d7-4685-88cb-007cddfcadad
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Jul 11 2017 05:30:53 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Exercise: Geofences

          For this exercise, it's time to create the geofences for all the places that we've picked earlier and start listening to entry/exit events

          ## Exercise Code

          **Exercise:** [T0X.04-Exercise-Geofencing](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.04-Exercise-Geofencing)
        instructor_notes: ''
        resources: null
  - id: 288322
    key: b39277d9-8078-4b01-919e-ae0e125145e1
    locale: en-us
    version: 1.0.0
    title: Geofence Transitions
    semantic_type: Concept
    updated_at: 'Wed Apr 19 2017 21:27:30 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 298978
    atoms:
      - id: 298978
        key: 060c5aa4-280e-4d5c-8af1-6e24e92bcab1
        locale: en-us
        version: 1.0.0
        title: Geofence Transitions
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:58 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53808'
          youtube_id: Lnt1UpCngx4
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2c3_17-geofence-transictions-v1/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2c3_17-geofence-transictions-v1/17-geofence-transictions-v1_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2c3_17-geofence-transictions-v1/17-geofence-transictions-v1_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2c3_17-geofence-transictions-v1/17-geofence-transictions-v1_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2c3_17-geofence-transictions-v1/17-geofence-transictions-v1_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7d2c3_17-geofence-transictions-v1/hls/playlist.m3u8'
  - id: 345629
    key: 2e3fe7b9-1638-4cda-b6af-6483d4bf765a
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Geofences'
    semantic_type: Concept
    updated_at: 'Thu Jul 13 2017 21:50:36 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 345631
      - 345630
    atoms:
      - id: 345631
        key: 264c622c-8710-4425-9ec2-04f15e965d81
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Jul 11 2017 05:31:38 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Exercise: Geofences

          Okay, now it's your turn. 

          ## Exercise Code

          **Exercise:** [T0X.04-Exercise-Geofencing](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.04-Exercise-Geofencing)
        instructor_notes: ''
        resources: null
      - id: 345630
        key: fbe65f2b-9e48-4632-9c39-9be55bb26e61
        locale: en-us
        version: 1.0.0
        title: 'Exercise: Geofences'
        semantic_type: TaskListAtom
        updated_at: 'Thu Jul 13 2017 21:51:00 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Create a Geofencing class that holds an ArrayList of Geofences
          - Implement a method "updateGeofencesList" that will create Geofence objects to fill the ArrayList
          - Implement a method "getGeofencingRequest" that returns a GeofencingRequest object from the ArrayList
          - Create a GeofenceBroadcastReceiver class that extends BroadcastReceiver and override onReceive()
          - Implement a method "getGeofencePendingIntent" that returns a PendingIntent for the GeofenceBroadcastReceiver
          - Implement "registerAllGeofences" and "UnRegisterAllGeofences” methods
          - Set up the switch button to enable/disable all geofences
        positive_feedback: '**Solution:** [[T0X.04-Solution-Geofencing](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.04-Solution-Geofencing)][[Diff](https://github.com/udacity/AdvancedAndroid_Shushme/compare/T0X.04-Exercise-Geofencing...T0X.04-Solution-Geofencing)]'
        video_feedback: null
        description: Follow the steps to complete this coding exercise.
  - id: 288323
    key: faaa2a9a-b70b-40b7-ba80-e30102b26292
    locale: en-us
    version: 1.0.0
    title: Tips and Tricks for Testing Location Apps
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:25:44 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 289258
    atoms:
      - id: 289258
        key: 1e090477-fdb3-4df0-b5e9-258c1d142731
        locale: en-us
        version: 1.0.0
        title: Tips and Tricks for Testing Location Apps
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:41:15 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '52532'
          youtube_id: dwvuRNoyLwk
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e27a9b_18-sc/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e27a9b_18-sc/18-sc_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e27a9b_18-sc/18-sc_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e27a9b_18-sc/18-sc_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e27a9b_18-sc/18-sc_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58e27a9b_18-sc/hls/playlist.m3u8'
  - id: 283156
    key: fe38f63f-0a1e-4a48-a58c-d3d10417d08f
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Silent Mode'
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:25:57 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 291674
      - 291675
      - 291676
      - 291673
      - 283157
      - 291670
      - 291678
      - 291667
      - 291671
      - 291668
      - 291679
      - 291669
      - 291680
    atoms:
      - id: 291674
        key: 73f8c7f0-2d76-4145-be39-d0d97f791528
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 14:16:26 GMT+0000 (UTC)'
        is_public: true
        text: |
          # Exercise: Silent Mode

          Now for the last piece of our puzzle we need to actually set the device to silent when a Geofence triggers an entry transition and change it back to normal when an exit transition is triggered!

          Ever since Android N things have changed a little: Now to change Android’s ringer mode you need to have the right permissions, and unfortunately it’s slightly more complicated than the regular permissions we have dealt with before, like the location permission for example. 

          So let’s start with that.

          First let’s add a checkbox to ask the user for **RingerMode permissions**,  the `onclick` event will launch an intent for `ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS` and start it.
        instructor_notes: ''
        resources: null
      - id: 291675
        key: 8b4dde83-6b39-4469-9c42-658397f63d6c
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Apr 07 2017 14:18:46 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/58e79fbc_screen-shot-2017-04-07-at-4.17.47-pm/screen-shot-2017-04-07-at-4.17.47-pm.png'
        width: 1490
        height: 166
        caption: ''
        resources: null
        instructor_notes: null
      - id: 291676
        key: d488e21a-3861-493a-b922-c9039919fdb7
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 14:30:17 GMT+0000 (UTC)'
        is_public: true
        text: |-
          This intent launches a new built-in activity that allows the user to turn **RingerMode permissions** on or off for their apps. Once the user turns that on, they can then press back and continue to use the app.

          To make sure our checkbox is always reflecting the correct permission status we need to initialize its state in `onResume`.

          In case of Android N or later, we need to check if the permission was granted using `isNotificationPolicyAccessGranted`, otherwise we could assume that the permission is granted by default.

          Also since we don’t want the user to be unchecking this after permissions have been granted, it's best to disable the checkbox once everything seems to be set properly.
        instructor_notes: ''
        resources: null
      - id: 291673
        key: f5c4443a-82b3-4536-9a03-6dd0e35e07a2
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Apr 07 2017 14:14:17 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/58e79eb0_screen-shot-2017-04-07-at-4.14.03-pm/screen-shot-2017-04-07-at-4.14.03-pm.png'
        width: 1328
        height: 426
        caption: ''
        resources: null
        instructor_notes: null
      - id: 283157
        key: 96071d85-d525-48b4-bd1d-579fd678f411
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 14:34:26 GMT+0000 (UTC)'
        is_public: true
        text: |
          Now let’s go back to our `GeofenceBroadcastReceiver`.

          In `onReceive`, we can use `GeofencingEvent.fromIntent` to retrieve the `GeofencingEvent` that caused the transition.

          From that we can call `getGeofenceTransition` to get the transition type.
        instructor_notes: ''
        resources: null
      - id: 291670
        key: 3dca3396-34d7-4655-a858-8ca32519cf89
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Apr 07 2017 14:11:32 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/58e79e10_screen-shot-2017-04-07-at-4.08.55-pm/screen-shot-2017-04-07-at-4.08.55-pm.png'
        width: 1048
        height: 86
        caption: ''
        resources: null
        instructor_notes: null
      - id: 291678
        key: 5d3823eb-85ed-42c0-b3a8-774b7badb093
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 14:35:10 GMT+0000 (UTC)'
        is_public: true
        text: |-
          And based on the transition type, we can use `AudioManager` to set the phone ringer mode.

          To keep things modular. I’ve created this helper method `setRingerMode` that using an AudioManager can set the `setRingerMode` to either silent or normal based on the mode parameter passed in.
          It also creates a `NotificationManager` to check for permissions for Android N or later.
        instructor_notes: ''
        resources: null
      - id: 291667
        key: 1cf691ce-f0ef-4e4a-bb3d-9f06c8523aa9
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Apr 07 2017 14:02:47 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/58e79bff_screen-shot-2017-04-07-at-3.47.38-pm/screen-shot-2017-04-07-at-3.47.38-pm.png'
        width: 1574
        height: 682
        caption: ''
        resources: null
        instructor_notes: null
      - id: 291671
        key: 4429a92b-2fd9-434f-ae3d-6b1b03274b0d
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Apr 07 2017 14:12:46 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/58e79e55_screen-shot-2017-04-07-at-4.09.03-pm/screen-shot-2017-04-07-at-4.09.03-pm.png'
        width: 1156
        height: 550
        caption: ''
        resources: null
        instructor_notes: null
      - id: 291668
        key: cae46c92-be86-4ffb-8975-40689243d562
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 14:06:04 GMT+0000 (UTC)'
        is_public: true
        text: |-
          ### Notifications

          It would also be nice to have the app notify the user whenever the device has been set to silent or back to normal.

          So I’ve created this helper method `sendNotification` that will create a typical Android notification with an icon corresponding to either being silent or normal.
        instructor_notes: ''
        resources: null
      - id: 291679
        key: 21fa9258-b37f-4ac7-a289-3aa9879adbeb
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: ImageAtom
        updated_at: 'Fri Apr 07 2017 14:37:07 GMT+0000 (UTC)'
        is_public: true
        url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/58e7a40c_screen-shot-2017-04-07-at-4.37.07-pm/screen-shot-2017-04-07-at-4.37.07-pm.png'
        width: 1178
        height: 518
        caption: ''
        resources: null
        instructor_notes: null
      - id: 291669
        key: 1e0287cd-be26-4461-ae80-7e90b6e2329f
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 07 2017 14:39:57 GMT+0000 (UTC)'
        is_public: true
        text: |-
          ## Exercise Code

          **Exercise:** [T0X.05-Exercise-SilentMode](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.05-Exercise-SilentMode)
        instructor_notes: ''
        resources: null
      - id: 291680
        key: c3519947-1fe4-4649-a7a1-dd75aa00e5e5
        locale: en-us
        version: 1.0.0
        title: 'Exercise: Silent Mode'
        semantic_type: TaskListAtom
        updated_at: 'Fri Apr 14 2017 19:26:20 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Add a LinearLayout with the permissions CheckBox and UI
          - Implement onRingerPermissionsClicked to launch ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS
          - Initialize ringer permissions checkbox
          - Use GeofencingEvent.fromIntent to retrieve the GeofencingEvent that caused the transition
          - Use AudioManager to set the ringer mode based on the transition type
          - Show a notification to alert the user that the ringer mode has changed
        positive_feedback: '**Solution:** [[T0X.05-Solution-SilentMode](https://github.com/udacity/AdvancedAndroid_Shushme/tree/T0X.05-Solution-SilentMode)][[Diff](https://github.com/udacity/AdvancedAndroid_Shushme/compare/T0X.05-Exercise-SilentMode...T0X.05-Solution-SilentMode)]'
        video_feedback: null
        description: 'Okay, now it''s your turn. Follow the steps to complete this coding exercise.'
  - id: 288325
    key: bb933a9a-a10c-4fef-92fa-4c5a2deaac87
    locale: en-us
    version: 1.0.0
    title: Places Outro
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 19:26:46 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 288343
    atoms:
      - id: 288343
        key: 86a23c54-fdab-4f3d-a062-633e97eb7a6f
        locale: en-us
        version: 1.0.0
        title: Places Outro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:45 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '52361'
          youtube_id: S65b_yHnoxY
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade64_20-outro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade64_20-outro/20-outro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade64_20-outro/20-outro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade64_20-outro/20-outro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade64_20-outro/20-outro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58dade64_20-outro/hls/playlist.m3u8'
