id: 268644
key: 240ea66a-cf72-48bf-8df8-d5ff353a6d47
locale: en-us
version: 1.0.0
title: Libraries
semantic_type: Lesson
updated_at: 'Wed Jun 07 2017 22:36:11 GMT+0000 (UTC)'
is_public: true
image:
  url: 'https://d17h27t6h515a5.cloudfront.net/topher/2017/April/59025226_libraries/libraries.png'
  width: 718
  height: 712
video: null
summary: 'In this lesson, you''ll learn about including external libraries in your application. Libraries will allow you to unlock powerful features with just a few lines of code, as you''ll see when you build an app that converts a facial expression in a picture into the closest matching Emoji using the Google Mobile Vision library. By the end of the lesson, you''ll know how to find a select a library that suits your needs, as well as the names of a few "must have" Android Libraries.'
lesson_type: Classroom
duration: 180
is_project_lesson: false
_concepts_ids:
  - 286108
  - 293774
  - 293775
  - 282807
  - 286174
  - 282947
  - 286175
  - 286176
  - 282952
  - 286177
  - 282955
  - 286178
  - 286179
  - 286180
  - 282956
  - 286181
  - 286182
  - 292361
  - 286418
  - 286183
  - 282970
  - 292363
  - 286184
  - 282973
  - 286185
  - 286186
_project_id: null
concepts:
  - id: 286108
    key: 25fb050c-b522-4083-bb91-6ae4566b069c
    locale: en-us
    version: 1.0.0
    title: Introduction to Libraries
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 21:50:12 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 292353
    atoms:
      - id: 292353
        key: 2d5cdefb-4ca0-4550-8a60-e9916dad59a8
        locale: en-us
        version: 1.0.0
        title: Introduction to Libraries
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:36:53 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53096'
          youtube_id: RjfWy97dpuI
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44a_2-libraries-intro-v1/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44a_2-libraries-intro-v1/2-libraries-intro-v1_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44a_2-libraries-intro-v1/2-libraries-intro-v1_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44a_2-libraries-intro-v1/2-libraries-intro-v1_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44a_2-libraries-intro-v1/2-libraries-intro-v1_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44a_2-libraries-intro-v1/hls/playlist.m3u8'
  - id: 293774
    key: 1287e3dc-4c9b-49eb-841f-2fca32996ca8
    locale: en-us
    version: 1.0.0
    title: 'A Library You''ve Already Used '
    semantic_type: Concept
    updated_at: 'Tue Apr 18 2017 22:20:22 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 298555
    atoms:
      - id: 298555
        key: 1bc50f4a-593e-4fc6-9f35-361a6ad40ad0
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 18 2017 22:21:56 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # A Library You've Already Used 

          The first library you've been using is the <a href="https://developer.android.com/topic/libraries/support-library/index.html" target="_blank">Support Library</a>, which provides backwards compatibility for newer features of Android. Additionally, it provides convenience classes and features not available in the standard Framework API for easier development and support across more devices. 

          One example of the Support Library in action is the use of Runtime Permissions. The old permissions model requested the desired permission when the app was installed. Starting with API level 23, however, the permissions are requested as they are needed. This approach streamlines the app install process, since the user does not need to grant permissions when they install or update the app. It also gives the user more control over the app's functionality; for example, a user could choose to give a the Google+ app access to the contacts but not to the device location or camera. 

          The Support Library includes methods for checking for existing permissions, and requesting new permissions in a backwards compatible way: It will only affect devices running API level 23 or higher, so you don't have to do any API level checks yourself.

          The Support Library is very large, so including the entire library when all you want is compatible support for runtime permissions is almost certainly overkill. This is why the Support Library is fragmented into many different packages based on functionality, so you can include only the features that your application requires (remember how you included only the `RecyclerView` statement from the Support Library earlier). 

          For a complete list of packages and their uses, check out the  <a href="https://developer.android.com/topic/libraries/support-library/index.html" target="_blank">Support Library docs</a>.
        instructor_notes: ''
        resources: null
  - id: 293775
    key: 131b44af-3427-483c-99e3-bf4dfc7b590b
    locale: en-us
    version: 1.0.0
    title: When to Use Libraries
    semantic_type: Concept
    updated_at: 'Wed Apr 19 2017 19:15:00 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 298933
    atoms:
      - id: 298933
        key: 9fe35e51-4356-4095-9d64-33b3fbb5d7b8
        locale: en-us
        version: 1.0.0
        title: When to Use Libraries
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:53 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53797'
          youtube_id: lCMxlcFr_tw
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7b68e_3-libs-already-use-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7b68e_3-libs-already-use-intro/3-libs-already-use-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7b68e_3-libs-already-use-intro/3-libs-already-use-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7b68e_3-libs-already-use-intro/3-libs-already-use-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7b68e_3-libs-already-use-intro/3-libs-already-use-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58f7b68e_3-libs-already-use-intro/hls/playlist.m3u8'
  - id: 282807
    key: 210bc127-87a3-4b63-8755-d9443b2dc4c3
    locale: en-us
    version: 1.0.0
    title: 'Quiz: When to Use Libraries'
    semantic_type: Concept
    updated_at: 'Thu Apr 13 2017 21:27:09 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 293777
      - 282946
    atoms:
      - id: 293777
        key: 29804cd1-e168-47f9-b161-62cd4bc3cee0
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Thu Apr 13 2017 21:34:23 GMT+0000 (UTC)'
        is_public: true
        text: '# When to Use Libraries'
        instructor_notes: ''
        resources: null
      - id: 282946
        key: 3d66504d-4324-4d44-ab30-8ba08c763b74
        locale: en-us
        version: 1.0.0
        title: When to Use Libaries
        semantic_type: CheckboxQuizAtom
        updated_at: 'Thu Mar 16 2017 17:35:17 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: Which of these problems might be solved with the use of a library?
          correct_feedback: |-
            Creating a content provider is no easy feat, and it has many components. Many developers have struggled with this, so naturally, someone created a library to simplify this process. Check out [Schematic](https://github.com/SimonVT/schematic) for an example of such a library.

            Loading images over the network is a challenge since it depends heavily on network availability and consumes a lot of battery. There are many libraries that help with this, including robust features such as caching, configured timeouts and more. See [Picasso](http://square.github.io/picasso/) for an example of such a library.

            Barcode scanning is a feature that is available in many different applications, so that should give you a hint that there are libraries that help with that. The Google Mobile Vision library includes API's for scanning barcodes.

            Complex logging needs can also be addressed using Libraries. The default logger falls short if you need to modify what kind of things you need displayed in the debugger depending on what version of your app is Running. [Timber](https://github.com/JakeWharton/timber) includes this, and many more features.
          video_feedback: null
          default_feedback: null
          answers:
            - id: a1489685005407
              text: Simplifying the creation of a content provider
              is_correct: true
              incorrect_feedback: null
            - id: a1489685044172
              text: Loading and managing images over the network
              is_correct: true
              incorrect_feedback: null
            - id: a1489685068192
              text: 'Adding barcode scanning functionality '
              is_correct: true
              incorrect_feedback: null
            - id: a1489685071462
              text: Different logging for debug and release version of the app
              is_correct: true
              incorrect_feedback: null
  - id: 286174
    key: fa1db230-50ce-446c-9221-1a01e7462459
    locale: en-us
    version: 1.0.0
    title: Find Library Intro
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:10:58 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286189
    atoms:
      - id: 286189
        key: 2890887a-62ed-4867-ba8a-010b9546862f
        locale: en-us
        version: 1.0.0
        title: Find Library Intro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51915'
          youtube_id: JJi_ZliEIf4
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4de_07-find-library-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4de_07-find-library-intro/07-find-library-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4de_07-find-library-intro/07-find-library-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4de_07-find-library-intro/07-find-library-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4de_07-find-library-intro/07-find-library-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4de_07-find-library-intro/hls/playlist.m3u8'
  - id: 282947
    key: 8f8913c5-3d66-4d15-a0a1-843c838cbdc0
    locale: en-us
    version: 1.0.0
    title: How to Find a Library
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:12:59 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 282950
    atoms:
      - id: 282950
        key: 03c93220-d722-44f1-a9d8-50b02795e46d
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 18 2017 18:54:55 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Finding Libraries
          Finding a library that fits your needs starts where all the rest of your questions have been answered so far: that's right, [stackoverflow](http://stackoverflow.com/). 

          Libraries are useful for solving problems that appear over and over again in different applications. If you search Stack Overflow, often the accepted solution to the problem you are trying to solve will be a third party library that does exactly what you're looking for.

          I'd also like to mention two more resources for finding libraries: 
          The first one is [Android Arsenal](https://android-arsenal.com/), which is a large library of libraries (aha) that just about anyone can add to. There are literally thousands of libraries on here, of highly varied quality. 
          The second resource is this [Github](https://github.com/codepath/android_guides/wiki/Must-Have-libraries) page, which lists some of the most commonly used android libraries. 

          # But Wait!
          A word of caution: just because there is a library that seems like a perfect fit for you need, do not be too hasty in adding it to you application. Using a library that is not well maintained or documented comes with a host of other issues and is likely to cause more of a headache than it cures. The next video will be devoted to figuring out whether a library is a good candidate for your application.

          ### 64K Method Limit
          Another consideration in deciding whether or not to use a library is to be aware of how it will affect the size of your app. When your app, including the libraries it uses, reaches a certain size, you encounter build errors that indicate your app has reached a limit of the Android app build architecture ([64K Method Limit](https://developer.android.com/studio/build/multidex.html)). Libraries are commonly used and without a doubt efficient, but do be aware of theses considerations. 
        instructor_notes: ''
        resources: null
  - id: 286175
    key: 13410858-0e12-4027-b406-da30706c9a29
    locale: en-us
    version: 1.0.0
    title: Choose a Library
    semantic_type: Concept
    updated_at: 'Mon Apr 24 2017 17:20:22 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286190
      - 289111
    atoms:
      - id: 286190
        key: 1a587553-2b12-4bda-b4de-35678d6d750a
        locale: en-us
        version: 1.0.0
        title: Choose a Library
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51916'
          youtube_id: hut5flkLZj8
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4f1_09-choose-library/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4f1_09-choose-library/09-choose-library_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4f1_09-choose-library/09-choose-library_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4f1_09-choose-library/09-choose-library_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4f1_09-choose-library/09-choose-library_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b4f1_09-choose-library/hls/playlist.m3u8'
      - id: 289111
        key: 9d5bf91b-d6ed-4d40-8ca6-2cb365c4e38d
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 31 2017 21:08:28 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Instructor Notes
          For more information on licenses and which licenses to use, check out this [link](https://choosealicense.com/)
        instructor_notes: ''
        resources: null
  - id: 286176
    key: f0c5803c-36fb-4422-83ae-7c3b75f5869c
    locale: en-us
    version: 1.0.0
    title: Explore a Library
    semantic_type: Concept
    updated_at: 'Mon Apr 24 2017 17:20:10 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286191
    atoms:
      - id: 286191
        key: 7c46cf13-ba0c-46d6-8850-e04fe0087513
        locale: en-us
        version: 1.0.0
        title: Explore a Library
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:35:41 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51917'
          youtube_id: rSvwImNOscU
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b500_10-explore-library/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b500_10-explore-library/10-explore-library_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b500_10-explore-library/10-explore-library_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b500_10-explore-library/10-explore-library_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b500_10-explore-library/10-explore-library_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b500_10-explore-library/hls/playlist.m3u8'
  - id: 282952
    key: 07f2f37a-0d1c-4d58-b1ae-904822c5f26a
    locale: en-us
    version: 1.0.0
    title: 'Quiz: Exploring a Library'
    semantic_type: Concept
    updated_at: 'Thu Apr 13 2017 21:26:30 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 282954
      - 282953
    atoms:
      - id: 282954
        key: eb715713-73d8-490d-ac39-a57856d2dc0c
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Thu Mar 16 2017 17:45:02 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Exploring a Library
          It's a good idea to familiarize yourself with the Library before you start implementing it. Check out the documentation to figure which of the classes below are involved in using Classification to detect faces in a bitmap.
        instructor_notes: ''
        resources: null
      - id: 282953
        key: e0b262c4-face-4d5f-9733-0d4937c483d0
        locale: en-us
        version: 1.0.0
        title: Exploring a Library
        semantic_type: CheckboxQuizAtom
        updated_at: 'Thu Mar 16 2017 17:44:28 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: Which of these classes are involved in detecting faces in a bitmap using the Mobile Vision library?
          correct_feedback: 'Nice job! The FaceDetecor, Frame, and Face classes each deal with facial recognition using the Mobile Vision library. '
          video_feedback: null
          default_feedback: null
          answers:
            - id: a1489686115151
              text: FaceDetector
              is_correct: true
              incorrect_feedback: null
            - id: a1489686158285
              text: Landmark
              is_correct: false
              incorrect_feedback: null
            - id: a1489686167248
              text: Frame
              is_correct: true
              incorrect_feedback: null
            - id: a1489686174627
              text: Face
              is_correct: true
              incorrect_feedback: null
  - id: 286177
    key: ff3a859c-3dd8-4c1d-9969-70f796af4fd7
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Explore Starter Code'
    semantic_type: Concept
    updated_at: 'Thu Apr 13 2017 21:54:04 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286192
      - 289097
    atoms:
      - id: 286192
        key: ae6957fb-5b4d-4775-a9d8-d1daf119f3d2
        locale: en-us
        version: 1.0.0
        title: Explore Starter Code
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51918'
          youtube_id: zcSWlqM2pXo
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_13-explore-started-code/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_13-explore-started-code/13-explore-started-code_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_13-explore-started-code/13-explore-started-code_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_13-explore-started-code/13-explore-started-code_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_13-explore-started-code/13-explore-started-code_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_13-explore-started-code/hls/playlist.m3u8'
      - id: 289097
        key: bf95b8e7-5725-4b74-9387-3276da419d53
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Thu Apr 13 2017 21:54:27 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Emojify Code

          The code for this app can be found in the [Emojify repository](https://github.com/udacity/AdvancedAndroid_Emojify).  Runtime permissions information can be found in the [Android Developer Docs](https://developer.android.com/training/permissions/requesting.html). 

          Download this repository using the command:

          ```bash
          git clone https://github.com/udacity/AdvancedAndroid_Emojify.git
          ```

          If you need to a refresher on how the code is organized, please refer to the [concept where we introduced how to work with the course code](https://classroom.udacity.com/courses/ud857/lessons/8b2a9d63-0ff5-48ff-90d3-a9855b701dae/concepts/41b82e3c-2797-46e5-8a66-684098ca8cbb).

          Take some time to review the Starter Code.

          ### Exercise Code
          **Exercise:** [TLIB.00-StartingCode](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.00-StartingCode)
        instructor_notes: ''
        resources: null
  - id: 282955
    key: 6b80a4fa-fcdc-4409-b03d-be5b4578a534
    locale: en-us
    version: 1.0.0
    title: 'Explore the Starter Code: Bitmap Utils'
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:13:11 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 289122
    atoms:
      - id: 289122
        key: 1c051319-e5c9-43b2-be1a-6a56bde8f951
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 31 2017 21:24:14 GMT+0000 (UTC)'
        is_public: true
        text: |-
          `resamplePic()`:
          The `resamplePic()` method gets the height and width of the device screen in pixels, and resamples the passed in image to fit the screen.

          `createTempImageFile()`:
          This method creates a temporary file in the external cache directory and returns the new temp file.

          `deleteImageFile()`:
          This method attempts to delete the image at the passed in path. If it fails, it shows a toast.

          `galleryAddPic()`:
          This method cause the image content provider to add the image from the passed in path to the system gallery, so it can be found by other app. It is only called inside the saveImage() described below.

          `saveImage()`:
          This method saves the passed in Bitmap in the External Storage, in the subdirectory called "Emojify". It also adds the image to the system gallery by calling the above `galleryAddPic()`.

          `shareImage()`:
          This method creates a share implicit intent, which will bring up the system chooser with apps that handle sharing an image.
        instructor_notes: ''
        resources: null
  - id: 286178
    key: 3700e068-175e-47f5-94a7-86828d07f81f
    locale: en-us
    version: 1.0.0
    title: Explore Starter Code Outro
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:13:13 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286193
    atoms:
      - id: 286193
        key: 3c8681ed-75ac-469f-997d-dd9d03659add
        locale: en-us
        version: 1.0.0
        title: Explore Starter Code Outro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51919'
          youtube_id: IjRX2bTiTYg
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_15-explore-starter-code-outro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_15-explore-starter-code-outro/15-explore-starter-code-outro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_15-explore-starter-code-outro/15-explore-starter-code-outro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_15-explore-starter-code-outro/15-explore-starter-code-outro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_15-explore-starter-code-outro/15-explore-starter-code-outro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b52a_15-explore-starter-code-outro/hls/playlist.m3u8'
  - id: 286179
    key: b5bff7d4-f1f6-452f-9fff-2677298b6aa1
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Add Gradle Dependency'
    semantic_type: Concept
    updated_at: 'Thu Apr 13 2017 22:01:33 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286194
      - 293782
      - 293783
    atoms:
      - id: 286194
        key: 7f39f736-bbeb-496c-9021-59c244807063
        locale: en-us
        version: 1.0.0
        title: 'Exercise: Add Gradle Dependency'
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51920'
          youtube_id: K_aLHdX7HRI
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b534_16-add-gradle-dependency/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b534_16-add-gradle-dependency/16-add-gradle-dependency_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b534_16-add-gradle-dependency/16-add-gradle-dependency_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b534_16-add-gradle-dependency/16-add-gradle-dependency_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b534_16-add-gradle-dependency/16-add-gradle-dependency_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b534_16-add-gradle-dependency/hls/playlist.m3u8'
      - id: 293782
        key: 467108b3-76b7-40c5-8ae3-8e58adc7e472
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 18 2017 18:56:51 GMT+0000 (UTC)'
        is_public: true
        text: |+
          # Add Gradle Dependency

          In this exercise, you will add the Google Mobile Vision library dependency to your build.gradle file, so you can access the library's classes and methods in your project.

          [Set Up Google Play Services documentation](https://developers.google.com/android/guides/setup)

          ### Exercise Code
          **Exercise:** [TLIB.01-Exercise-AddGradleDependency](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.01-Exercise-AddGradleDependency)

        instructor_notes: ''
        resources: null
      - id: 293783
        key: 535c29eb-4b48-4a1e-97e3-a23cb92902bb
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Thu Apr 13 2017 22:02:17 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Add Google Mobile Vision Library in build.gradle
        positive_feedback: |-
          Off to a great start! With the dependency added, we can now access the library's classes and methods in our project. 

          **Solution:** [[TLIB.01-Solution-AddGradleDependency](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.01-Solution-AddGradleDependency)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.00-StartingCode...TLIB.01-Exercise-AddGradleDependency?expand=1)]
        video_feedback: null
        description: Complete the TODO so we can start using the Google Mobile Vision Library
  - id: 286180
    key: 1d024e2d-92b6-4028-be45-005efd72049d
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Detect Faces Intro'
    semantic_type: Concept
    updated_at: 'Thu Apr 13 2017 22:08:32 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 292354
      - 293785
      - 293786
    atoms:
      - id: 292354
        key: 7cd65a0e-b51a-4cc6-b40e-1d066fe5807f
        locale: en-us
        version: 1.0.0
        title: 'Exercise: Detect Faces Intro'
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:36:53 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53097'
          youtube_id: J0IxySlL6Ig
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44b_17-detect-faces-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44b_17-detect-faces-intro/17-detect-faces-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44b_17-detect-faces-intro/17-detect-faces-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44b_17-detect-faces-intro/17-detect-faces-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44b_17-detect-faces-intro/17-detect-faces-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44b_17-detect-faces-intro/hls/playlist.m3u8'
      - id: 293785
        key: 85b69c87-ea62-42e3-81b0-ea00c13c4d73
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Thu Apr 13 2017 22:06:10 GMT+0000 (UTC)'
        is_public: true
        text: |+
          # Detect Faces

          In this exercise, you'll use the Mobile Vision library to detect the number faces in an image, and print the result in the log

          ### Exercise Code
          **Exercise:** [TLIB.02-Exercise-DetectFaces](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.02-Exercise-DetectFaces)

        instructor_notes: ''
        resources: null
      - id: 293786
        key: 0fabe3b2-69eb-4925-9437-3f37b1c06a2d
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Thu Apr 13 2017 22:08:32 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Create a Java class called Emojifier
          - Create a static method in the Emojifier class called detectFaces() which detects and logs the number of faces in a given bitmap
          - 'Call the new detectFaces() method, passing in the resampled bitmap to detect the faces in the picture'
        positive_feedback: |-
          Great work!

          **Solution:** [[https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.02-Solution-DetectFaces)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.02-Exercise-DetectFaces...TLIB.02-Solution-DetectFaces?expand=1)]
        video_feedback: null
        description: 'Complete the TODOs in the exercise:'
  - id: 282956
    key: 801710e8-f10e-4f0e-aeda-2b90aa2f1117
    locale: en-us
    version: 1.0.0
    title: Detecting Faces
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:12:35 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 282957
    atoms:
      - id: 282957
        key: d830b0de-bb92-4b57-9571-b6d990b3d87b
        locale: en-us
        version: 1.0.0
        title: Detecting Faces
        semantic_type: CheckboxQuizAtom
        updated_at: 'Thu Mar 16 2017 17:52:18 GMT+0000 (UTC)'
        is_public: true
        question:
          prompt: What two methods should you use with the FaceDetector.Builder to turn on Classifications and improve performance by disabling tracking (which maintains an ID between consecutive frames if the same face exists in both of them?)
          correct_feedback: 'Great! `setClassificationType(FaceDetector.ALL_CLASSIFICATIONS)` and `setTrackingEnabled(false)` are the correct methods. '
          video_feedback: null
          default_feedback: null
          answers:
            - id: a1489686585659
              text: '`setTrackingEnabled(true)`'
              is_correct: false
              incorrect_feedback: null
            - id: a1489686641327
              text: '`setLandmarkType(FaceDetector.ALL_LANDMARKS)`'
              is_correct: false
              incorrect_feedback: null
            - id: a1489686654487
              text: '`setClassificationType(FaceDetector.ALL_CLASSIFICATIONS)`'
              is_correct: true
              incorrect_feedback: null
            - id: a1489686665413
              text: '`setTrackingEnabled(false)`'
              is_correct: true
              incorrect_feedback: null
  - id: 286181
    key: c0ada783-1ee0-4046-8b6a-5b9c597cb77a
    locale: en-us
    version: 1.0.0
    title: Detect Faces
    semantic_type: Concept
    updated_at: 'Tue Apr 11 2017 19:13:24 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286196
    atoms:
      - id: 286196
        key: b70dab58-c46e-4fc7-bed3-5c66c21aba51
        locale: en-us
        version: 1.0.0
        title: Detect Faces
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51922'
          youtube_id: lWkz-G1l3Z4
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b53f_19-detect-faces/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b53f_19-detect-faces/19-detect-faces_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b53f_19-detect-faces/19-detect-faces_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b53f_19-detect-faces/19-detect-faces_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b53f_19-detect-faces/19-detect-faces_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b53f_19-detect-faces/hls/playlist.m3u8'
  - id: 286182
    key: e7fe3da4-e548-4386-aa84-180cefccf9a8
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Get Probabilities'
    semantic_type: Concept
    updated_at: 'Thu Apr 13 2017 22:14:19 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286197
      - 293789
      - 293793
    atoms:
      - id: 286197
        key: 81b58353-03ab-4b46-a87a-ab5439828ce2
        locale: en-us
        version: 1.0.0
        title: 'Exercise: Get Probabilities'
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51927'
          youtube_id: WJuSR0jvIcc
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b562_20-get-probabilities-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b562_20-get-probabilities-intro/20-get-probabilities-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b562_20-get-probabilities-intro/20-get-probabilities-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b562_20-get-probabilities-intro/20-get-probabilities-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b562_20-get-probabilities-intro/20-get-probabilities-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b562_20-get-probabilities-intro/hls/playlist.m3u8'
      - id: 293789
        key: 72dd3eee-e8ab-4028-b9d6-c706a44ddee7
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Thu Apr 13 2017 22:10:46 GMT+0000 (UTC)'
        is_public: true
        text: |+
          # Get Probabilities

          In this exercise, you'll extend the detectFaces() method to print the classification probabilities in log.

          ### Exercise Code
          **Exercise:** [TLIB.03-Exercise-GetClassificationProbabilities](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.03-Exercise-GetClassificationProbabilities)

        instructor_notes: ''
        resources: null
      - id: 293793
        key: 708696c3-9878-4c59-a198-7d02a043eb99
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Thu Apr 13 2017 22:14:19 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Create a static method called getClassifications() which logs the probability of each eye being open and that the person is smiling
          - 'Iterate through the faces, calling getClassifications() for each face'
        positive_feedback: |-
          Probabilities down :D

          **Solution:** [[TLIB.03-Solution-GetClassificationProbabilities](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.03-Solution-GetClassificationProbabilities)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.03-Exercise-GetClassificationProbabilities...TLIB.03-Solution-GetClassificationProbabilities?expand=1)]
        video_feedback: null
        description: 'Complete the TODOs in the exercise:'
  - id: 292361
    key: b8ac18d7-d0a5-4ee5-bcd9-ecd515152acc
    locale: en-us
    version: 1.0.0
    title: Overlay Emoji Intro
    semantic_type: Concept
    updated_at: 'Tue Apr 18 2017 18:58:09 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 292362
      - 298504
    atoms:
      - id: 292362
        key: 2973f390-e997-4928-bfe0-0c59b4f605df
        locale: en-us
        version: 1.0.0
        title: Overlay Emoji Intro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53100'
          youtube_id: vVXei6G9MPE
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe457_24-overlay-emoji-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe457_24-overlay-emoji-intro/24-overlay-emoji-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe457_24-overlay-emoji-intro/24-overlay-emoji-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe457_24-overlay-emoji-intro/24-overlay-emoji-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe457_24-overlay-emoji-intro/24-overlay-emoji-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe457_24-overlay-emoji-intro/hls/playlist.m3u8'
      - id: 298504
        key: d2f60db5-a9a2-4d61-a258-2f879969a281
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 18 2017 18:58:09 GMT+0000 (UTC)'
        is_public: true
        text: 'More info about [Canvas Object](https://developer.android.com/reference/android/graphics/Canvas.html)'
        instructor_notes: ''
        resources: null
  - id: 286418
    key: 2e2f93db-10a2-4efa-9a70-91905e98050c
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Map to Emojis'
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:13:07 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 292355
      - 293794
      - 293799
    atoms:
      - id: 292355
        key: 6fd0d8e1-7575-4e9b-9e48-995df529d5d5
        locale: en-us
        version: 1.0.0
        title: 'Exercise: Map To Emojis'
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53098'
          youtube_id: yP0BUzA0PFo
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44d_21-map-to-emojis-intro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44d_21-map-to-emojis-intro/21-map-to-emojis-intro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44d_21-map-to-emojis-intro/21-map-to-emojis-intro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44d_21-map-to-emojis-intro/21-map-to-emojis-intro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44d_21-map-to-emojis-intro/21-map-to-emojis-intro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe44d_21-map-to-emojis-intro/hls/playlist.m3u8'
      - id: 293794
        key: 70e3f5a9-8dc6-4c8a-8137-a6aaf160e894
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Thu Apr 13 2017 22:16:01 GMT+0000 (UTC)'
        is_public: true
        text: |+
          # Map to Emojis

          In this exercise, you'll map the classification probabilities to the closest matching emoji.

          ### Exercise Code
          **Exercise:** [TLIB.04-Exercise-MatchFaceToEmoji](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.04-Exercise-MatchFaceToEmoji)

        instructor_notes: ''
        resources: null
      - id: 293799
        key: b29120e5-053a-434c-8775-1521cd7d4268
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Thu Apr 13 2017 22:22:17 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Create an enum class called Emoji that contains all the possible emoji you can make
          - Change the name of the getClassifications() method to whichEmoji()
          - 'Create threshold constants for a person smiling, and and eye being ope'
          - Create 3 boolean variables to track the state of the facial expression
          - Create an if/else system that selects the appropriate emoji
        positive_feedback: |-
          *High five!* The emojify-ing process is really coming together!

          **Solution:** [[TLIB.04-Solution-MatchFaceToEmoji](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.04-Solution-MatchFaceToEmoji)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.04-Exercise-MatchFaceToEmoji...TLIB.04-Solution-MatchFaceToEmoji?expand=1)]
        video_feedback: null
        description: 'Complete the TODOs in the exercise:'
  - id: 286183
    key: 20d7c0a4-bc83-4b99-b29d-31c331d846b2
    locale: en-us
    version: 1.0.0
    title: Set Probability Thresholds
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:13:22 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 292356
    atoms:
      - id: 292356
        key: 929df7f8-b950-4fa0-84b6-76edfadfe08e
        locale: en-us
        version: 1.0.0
        title: Set Probability Thresholds
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53099'
          youtube_id: n1hOTKXTaBg
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe454_23-set-probability-threholds-v1/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe454_23-set-probability-threholds-v1/23-set-probability-threholds-v1_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe454_23-set-probability-threholds-v1/23-set-probability-threholds-v1_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe454_23-set-probability-threholds-v1/23-set-probability-threholds-v1_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe454_23-set-probability-threholds-v1/23-set-probability-threholds-v1_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe454_23-set-probability-threholds-v1/hls/playlist.m3u8'
  - id: 282970
    key: a865723f-d61d-487a-ab24-7ebd97589e94
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Overlay Emoji - Step 1'
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:13:50 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 282971
      - 297373
      - 297374
    atoms:
      - id: 282971
        key: 308a9fea-e788-4452-b896-432db49a7d68
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 31 2017 20:50:52 GMT+0000 (UTC)'
        is_public: true
        text: |-
          The `whichEmoji()` method already determines the proper Emoji based on the facial expression.
           
          You should now use it in a switch statement to select the proper emoji drawable. Do the following:

          Change the return type of the whichEmoji() method to the Emoji enum.

          At the end of the method, return the proper Emoji.

          Rename the `detectFaces()` method to `detectFacesAndOverlayEmoji()` since this method will now overlay the proper drawable as well as detect the faces, and change it's return type from `void` to `Bitmap`.
          Initialize an empty drawable inside the loop which iterates through the detected faces called `emojiBitmap`, used to hold the correct emoji drawable.
          Create a switch statement using the result of the `whichEmoji()` method as the argument, with a case for each Emoji, and use the `BitmapFactory.decodeResource()` method to define the initialized drawable to be the appropriate Emoji based on the result of the switch.

          You should now have the following components:
          The original picture bitmap from the camera, passed into the `detectFacesAndOverlayEmoji()` method.
          The appropriate Emoji bitmap for each face, defined inside the faces for loop.
          The detected face, again defined inside the loop.

          The next step involves creating a new method, `addBitmapToFace()`, which takes the three components we just discussed (picture bitmap, Emoji bitmap, and Face object), and combines them, overlaying the Emoji bitmap over the detected face on each iteration of the loop and returning the resulting, combined bitmap. 

          Combining Bitmaps is straightforward, but outside of the scope of this lesson. You can copy the code for this method below, and I will step through the functionality in the next node. For a more detailed explanation on working with 2D graphics take a look at the [Developer Docs](https://developer.android.com/guide/topics/graphics/2d-graphics.html).

          ```

          /**
          * Combines the original picture with the emoji bitmaps
          *
          * @param backgroundBitmap The original picture
          * @param emojiBitmap      The chosen emoji
          * @param face             The detected face
          * @return The final bitmap, including the emojis over the faces
          */
          private static Bitmap addBitmapToFace(Bitmap backgroundBitmap, Bitmap emojiBitmap, Face face) {

             // Initialize the results bitmap to be a mutable copy of the original image
             Bitmap resultBitmap = Bitmap.createBitmap(backgroundBitmap.getWidth(),
                     backgroundBitmap.getHeight(), backgroundBitmap.getConfig());

             // Scale the emoji so it looks better on the face
             float scaleFactor = EMOJI_SCALE_FACTOR;

             // Determine the size of the emoji to match the width of the face and preserve aspect ratio
             int newEmojiWidth = (int) (face.getWidth() * scaleFactor);
             int newEmojiHeight = (int) (emojiBitmap.getHeight() *
                     newEmojiWidth / emojiBitmap.getWidth() * scaleFactor);


             // Scale the emoji
             emojiBitmap = Bitmap.createScaledBitmap(emojiBitmap, newEmojiWidth, newEmojiHeight, false);

             // Determine the emoji position so it best lines up with the face
             float emojiPositionX =
                     (face.getPosition().x + face.getWidth() / 2) - emojiBitmap.getWidth() / 2;
             float emojiPositionY =
                     (face.getPosition().y + face.getHeight() / 2) - emojiBitmap.getHeight() / 3;

             // Create the canvas and draw the bitmaps to it
             Canvas canvas = new Canvas(resultBitmap);
             canvas.drawBitmap(backgroundBitmap, 0, 0, null);
             canvas.drawBitmap(emojiBitmap, emojiPositionX, emojiPositionY, null);

             return resultBitmap;
          }

          ```
        instructor_notes: ''
        resources: null
      - id: 297373
        key: a6eaab79-caaf-44b2-ab48-913f2a481cb7
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 14 2017 15:38:34 GMT+0000 (UTC)'
        is_public: true
        text: |+
          # Overlay Emoji Step 1

          In this code step, you'll add the bitmap drawable of the selected emoji on top of the detected face in the original picture.

          ### Exercise Code
          **Exercise:** [TLIB.05-Exercise-DrawEmojiOverFaces](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.05-Exercise-DrawEmojiOverFaces)

        instructor_notes: ''
        resources: null
      - id: 297374
        key: 4a34f7bc-8fae-4350-a5c3-98c15baf4d78
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Apr 14 2017 15:48:42 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Change the return type of the whichEmoji() method
          - Have the method return the selected Emoji type
          - Change the name of the detectFaces() method and the return type
          - Create a variable called emojiBitmap
          - Create a switch statement on the result of the whichEmoji()
          - Create and initialize a variable called resultBitmap
          - Call addBitmapToFace()
          - Return the resultBitmap
          - Change the method call from detectFaces() to detectFacesAndOverlayEmoji()
        positive_feedback: |-
          :D 

          **Solution:** [[TLIB.05-Solution-DrawEmojiOverFaces](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.05-Solution-DrawEmojiOverFaces)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.05-Exercise-DrawEmojiOverFaces...TLIB.05-Solution-DrawEmojiOverFaces?expand=1)]
        video_feedback: null
        description: 'Complete the TODOs in this exercise:'
  - id: 292363
    key: f566361a-8421-4edb-9bc4-c5c942f19dcf
    locale: en-us
    version: 1.0.0
    title: Overlay Emoji - Step 2
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:13:46 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 292364
    atoms:
      - id: 292364
        key: 3ac3c1df-0a7c-4ec2-aac2-9aeed0fc6d19
        locale: en-us
        version: 1.0.0
        title: Overlay Emoji - Step 2
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '53101'
          youtube_id: C-Dt76ko_Nc
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe46a_26-overlay-step-2/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe46a_26-overlay-step-2/26-overlay-step-2_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe46a_26-overlay-step-2/26-overlay-step-2_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe46a_26-overlay-step-2/26-overlay-step-2_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe46a_26-overlay-step-2/26-overlay-step-2_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/April/58ebe46a_26-overlay-step-2/hls/playlist.m3u8'
  - id: 286184
    key: 957a1f65-7c2b-4b0c-b5c5-f07dd07cc4d1
    locale: en-us
    version: 1.0.0
    title: Overlay Emoji Outro
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:14:01 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286200
    atoms:
      - id: 286200
        key: a205471d-0ef5-4317-99bc-be7e85721f6e
        locale: en-us
        version: 1.0.0
        title: Overlay Emoji Outro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:33:18 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51924'
          youtube_id: Ulbj0HOSUVY
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b547_27-overlay-emoji-outro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b547_27-overlay-emoji-outro/27-overlay-emoji-outro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b547_27-overlay-emoji-outro/27-overlay-emoji-outro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b547_27-overlay-emoji-outro/27-overlay-emoji-outro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b547_27-overlay-emoji-outro/27-overlay-emoji-outro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b547_27-overlay-emoji-outro/hls/playlist.m3u8'
  - id: 282973
    key: 62247b4f-a1d6-4653-9c34-da8fd7bdc4c0
    locale: en-us
    version: 1.0.0
    title: 'Exercise: Must Have Libraries'
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 15:51:26 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 282974
      - 297375
      - 297376
    atoms:
      - id: 282974
        key: b1afb9a0-bbe1-4aec-b0ea-6620c885e427
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 31 2017 20:42:07 GMT+0000 (UTC)'
        is_public: true
        text: |-
          To conclude this lesson, here are some other Libraries that many Android applications use. 

          1. **Picasso and Glide**
          An extremely common problem that Android developers face is the proper use of images in their application. Including many high quality images will drastically increase your apk size, while downloading images over the network comes with memory consumption and network availability problems. Picasso and Glide are both very robust libraries that facilitate the loading, caching and displaying of Images. They include tons of amazing features, such as the ability to include placeholder images and local caching, so almost every application that includes images uses one of these. Check out the documentation on [Picasso](http://square.github.io/picasso/) and [Glide](https://github.com/bumptech/glide). 

          2.  **Butterknife**:
          If you've created an app with a lot of views, then you'll know how tedious it can be to write findViewById() calls for each one, as well as to create custom onClicks for each one. These tasks pertain to Data Binding, the realm of connecting your data to the user facing views. Butterknife is a revolutionary library that uses annotations to make this much easier. Check out the documentation for some examples of how this can make your life much easier. You can even implement it in our Emojifier app if you want, checkout [this code](https://github.com/ngamolsky/Emojify/commit/6a9f68d1ff72b0679190fdafb43aa004780dfeb8) to see how it would look. 
          3. **Timber**:
          Created and maintained by the same guy that created Butterknife, Timber is a really cool tool for Logging. I'm sure you have all used the built-in Logger and know the importance of seeing information about your app in the debugger. Timber takes this further by providing a modifiable platform for all your logging needs. It contains these, and many more features:
          Log without a TAG (Timber creates one for you);
          Create different logging logic for Debug and Release version of your app (you probably only want to see errors in the release version);
          Automatic error detection.
          Again, you can see this library in action in our Emojifier application if you want [here](https://github.com/ngamolsky/Emojify/commit/1d9742eb394f9637819f9e25c6c760abc2cc92c3), but it is totally optional.
        instructor_notes: ''
        resources: null
      - id: 297375
        key: 56d92904-b945-44b5-a38a-49499f7e2732
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Apr 14 2017 15:46:14 GMT+0000 (UTC)'
        is_public: true
        text: |+
          # Must Have Libraries

          ### Exercise Code
          **Exercise:** [TLIB.06-Exercise-AddButterknife](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.06-Exercise-AddButterknife)

          **Exercise:** [TLIB.07-Exercise-AddTimber](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.07-Exercise-AddTimber)

        instructor_notes: ''
        resources: null
      - id: 297376
        key: 22bab70d-a51d-4e9c-921c-16617fb0b72d
        locale: en-us
        version: 1.0.0
        title: ''
        semantic_type: TaskListAtom
        updated_at: 'Fri Apr 14 2017 15:51:27 GMT+0000 (UTC)'
        is_public: true
        tasks:
          - Complete the setup for Timber in Emojify
          - Complete the setup for Butterknife in Emojify
        positive_feedback: |-
          Timber! Another exercise down and completed :)

          **Solution:** [[TLIB.06-Exercise-AddButterknife](https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.06-Exercise-AddButterknife)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.06-Exercise-AddButterknife...TLIB.06-Solution-AddButterknife?expand=1)]


          **Solution:** [[TLIB.07-Exercise-AddTimber(https://github.com/udacity/AdvancedAndroid_Emojify/tree/TLIB.06-Exercise-AddButterknife)][[Diff](https://github.com/udacity/AdvancedAndroid_Emojify/compare/TLIB.07-Exercise-AddTimber...TLIB.07-Solution-AddTimber?expand=1)]
        video_feedback: null
        description: ''
  - id: 286185
    key: 53704183-35a6-412d-83ed-55fbdc8ae628
    locale: en-us
    version: 1.0.0
    title: Must Have Libraries Outro
    semantic_type: Concept
    updated_at: 'Tue Apr 18 2017 19:00:02 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286202
      - 298507
    atoms:
      - id: 286202
        key: 1ce5daf7-d226-47e4-8619-e7386980a387
        locale: en-us
        version: 1.0.0
        title: Must Have Libraries Outro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51923'
          youtube_id: AIxbwzFQFHM
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b541_29-must-have-libraries-outro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b541_29-must-have-libraries-outro/29-must-have-libraries-outro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b541_29-must-have-libraries-outro/29-must-have-libraries-outro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b541_29-must-have-libraries-outro/29-must-have-libraries-outro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b541_29-must-have-libraries-outro/29-must-have-libraries-outro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b541_29-must-have-libraries-outro/hls/playlist.m3u8'
      - id: 298507
        key: 8a645af2-9e4b-4a32-9af3-3a9d79410613
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Tue Apr 18 2017 19:00:02 GMT+0000 (UTC)'
        is_public: true
        text: |-
          - [Butterknife Library](https://github.com/JakeWharton/butterknife)
          - [Timer Library](https://github.com/JakeWharton/timber)
        instructor_notes: ''
        resources: null
  - id: 286186
    key: f5282c3d-ff7b-4b65-b82d-89f8d6efe15c
    locale: en-us
    version: 1.0.0
    title: Libraries Outro
    semantic_type: Concept
    updated_at: 'Fri Apr 14 2017 22:14:23 GMT+0000 (UTC)'
    is_public: true
    resources: null
    _atoms_ids:
      - 286188
      - 289107
    atoms:
      - id: 286188
        key: 9e69d345-9e47-48b4-83be-0fba04cbdf73
        locale: en-us
        version: 1.0.0
        title: Libraries Outro
        semantic_type: VideoAtom
        updated_at: 'Wed Jun 28 2017 00:40:56 GMT+0000 (UTC)'
        is_public: true
        tags: []
        instructor_notes: ''
        resources: null
        video:
          id: '51926'
          youtube_id: sc8d9DajAuo
          subtitles:
            - url: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b55b_30-outro/subtitles/lang_en_vs1.srt'
              language_code: en
          transcodings:
            uri_480p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b55b_30-outro/30-outro_480p.mp4'
            uri_480p_1000kbps_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b55b_30-outro/30-outro_480p_1000kbps.mp4'
            uri_480p_ogg: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b55b_30-outro/30-outro_480p.ogg'
            uri_720p_mp4: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b55b_30-outro/30-outro_720p.mp4'
            uri_hls: 'http://video.udacity-data.com.s3.amazonaws.com/topher/2017/March/58d1b55b_30-outro/hls/playlist.m3u8'
      - id: 289107
        key: fe6b9258-8efa-4aae-9ca1-32da036f285b
        locale: en-us
        version: 1.0.0
        title: null
        semantic_type: TextAtom
        updated_at: 'Fri Mar 31 2017 20:37:35 GMT+0000 (UTC)'
        is_public: true
        text: |-
          # Instructor Notes
          Check out the [Developer Docs](https://developer.android.com/studio/projects/android-library.html) on making an Android library. 
        instructor_notes: ''
        resources: null
